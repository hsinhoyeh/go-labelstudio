---
swagger: "2.0"
info:
  version: "v1.11.0"
  title: "Label Studio API"
  contact:
    url: "https://labelstud.io"
  x-logo:
    url: "../../static/icons/logo-black.svg"
host: "api.labelstud.io"
basePath: "/"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
security:
- Token: []
paths:
  /api/annotations/{id}/:
    get:
      tags:
      - "Annotations"
      summary: "Get annotation by its ID"
      description: "Retrieve a specific annotation for a task using the annotation\
        \ result ID."
      operationId: "api_annotations_read"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this annotation."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Annotation"
    delete:
      tags:
      - "Annotations"
      summary: "Delete annotation"
      description: "Delete an annotation. This action can't be undone!"
      operationId: "api_annotations_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this annotation."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "204":
          description: ""
    patch:
      tags:
      - "Annotations"
      summary: "Update annotation"
      description: "Update existing attributes on an annotation."
      operationId: "api_annotations_partial_update"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this annotation."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/Annotation"
        x-exportParamName: "Data"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Annotation"
  /api/current-user/reset-token/:
    post:
      tags:
      - "Users"
      summary: "Reset user token"
      description: "Reset the user token for the current user."
      operationId: "api_current-user_reset-token_create"
      parameters: []
      responses:
        "201":
          description: "User token response"
          schema:
            $ref: "#/definitions/inline_response_201"
  /api/current-user/token:
    get:
      tags:
      - "Users"
      summary: "Get user token"
      description: "Get a user token to authenticate to the API as the current user."
      operationId: "api_current-user_token_list"
      parameters: []
      responses:
        "200":
          description: "User token response"
  /api/current-user/whoami:
    get:
      tags:
      - "Users"
      summary: "Retrieve my user"
      description: "Retrieve details of the account that you are using to access the\
        \ API."
      operationId: "api_current-user_whoami_read"
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/BaseUser"
  /api/dm/actions/:
    get:
      tags:
      - "Data Manager"
      summary: "Get actions"
      description: "Retrieve all the registered actions with descriptions that data\
        \ manager can use."
      operationId: "api_dm_actions_list"
      parameters: []
      responses:
        "200":
          description: ""
    post:
      tags:
      - "Data Manager"
      summary: "Post actions"
      description: "Perform an action with the selected items from a specific view."
      operationId: "api_dm_actions_create"
      parameters: []
      responses:
        "201":
          description: ""
  /api/dm/columns/:
    get:
      tags:
      - "Data Manager"
      summary: "Get data manager columns"
      description: "Retrieve the data manager columns available for the tasks in a\
        \ specific project."
      operationId: "api_dm_columns_list"
      parameters: []
      responses:
        "200":
          description: ""
  /api/dm/project/:
    get:
      tags:
      - "Data Manager"
      summary: "Get project state"
      description: "Retrieve the project state for the data manager."
      operationId: "api_dm_project_list"
      parameters: []
      responses:
        "200":
          description: ""
  /api/dm/views/:
    get:
      tags:
      - "Data Manager"
      summary: "List views"
      description: "List all views for a specific project."
      operationId: "api_dm_views_list"
      parameters:
      - name: "project"
        in: "query"
        description: "Project ID"
        required: false
        type: "integer"
        x-exportParamName: "Project"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/View"
    post:
      tags:
      - "Data Manager"
      summary: "Create view"
      description: "Create a view for a specific project."
      operationId: "api_dm_views_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/View"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/View"
  /api/dm/views/reset/:
    delete:
      tags:
      - "Data Manager"
      summary: "Reset project views"
      description: "Reset all views for a specific project."
      operationId: "api_dm_views_reset"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/ViewReset"
        x-exportParamName: "Data"
      responses:
        "204":
          description: ""
  /api/dm/views/{id}/:
    get:
      tags:
      - "Data Manager"
      summary: "Get view details"
      description: "Get the details about a specific view in the data manager"
      operationId: "api_dm_views_read"
      parameters:
      - name: "id"
        in: "path"
        description: "View ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/View"
    put:
      tags:
      - "Data Manager"
      summary: "Put view"
      description: "Overwrite view data with updated filters and other information\
        \ for a specific project."
      operationId: "api_dm_views_update"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/View"
        x-exportParamName: "Data"
      - name: "id"
        in: "path"
        description: "View ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/View"
    delete:
      tags:
      - "Data Manager"
      summary: "Delete view"
      description: "Delete a specific view by ID."
      operationId: "api_dm_views_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "View ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "204":
          description: ""
    patch:
      tags:
      - "Data Manager"
      summary: "Update view"
      description: "Update view data with additional filters and other information\
        \ for a specific project."
      operationId: "api_dm_views_partial_update"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/View"
        x-exportParamName: "Data"
      - name: "id"
        in: "path"
        description: "View ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/View"
  /api/import/file-upload/{id}:
    get:
      tags:
      - "Import"
      summary: "Get file upload"
      description: "Retrieve details about a specific uploaded file."
      operationId: "api_import_file-upload_read"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this file upload."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/FileUpload"
    delete:
      tags:
      - "Import"
      summary: "Delete file upload"
      description: "Delete a specific uploaded file."
      operationId: "api_import_file-upload_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this file upload."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "204":
          description: ""
    patch:
      tags:
      - "Import"
      summary: "Update file upload"
      description: "Update a specific uploaded file."
      operationId: "api_import_file-upload_partial_update"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this file upload."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/FileUpload"
        x-exportParamName: "Data"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/FileUpload"
  /api/invite:
    get:
      tags:
      - "Invites"
      summary: "Get organization invite link"
      description: "Get a link to use to invite a new member to an organization in\
        \ Label Studio Enterprise."
      operationId: "api_invite_read"
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/OrganizationInvite"
  /api/invite/reset-token:
    post:
      tags:
      - "Invites"
      summary: "Reset organization token"
      description: "Reset the token used in the invitation link to invite someone\
        \ to an organization."
      operationId: "api_invite_reset-token_create"
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/OrganizationInvite"
  /api/label_links/:
    get:
      tags:
      - "Labels"
      summary: "List label links"
      description: "List label links for a specific label and project."
      operationId: "api_label_links_list"
      parameters:
      - name: "page"
        in: "query"
        description: "A page number within the paginated result set."
        required: false
        type: "integer"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200"
    post:
      tags:
      - "Labels"
      summary: "Create label links"
      description: "Create label links to link new custom labels to your project labeling\
        \ configuration."
      operationId: "api_label_links_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/LabelLink"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/LabelLink"
  /api/label_links/{id}/:
    get:
      tags:
      - "Labels"
      summary: "Get label link"
      description: "Get label links for a specific project configuration. "
      operationId: "api_label_links_read"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/LabelLink"
    delete:
      tags:
      - "Labels"
      summary: "Remove label link"
      description: "\nRemove a label link that links custom labels to your project\
        \ labeling configuration. If you remove a label link,\nthe label stops being\
        \ available for the project it was linked to. You can add a new label link\
        \ at any time. \n"
      operationId: "api_label_links_delete"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "204":
          description: ""
    patch:
      tags:
      - "Labels"
      summary: "Update label link"
      description: "\nUpdate a label link that links custom labels to a project labeling\
        \ configuration, for example if the fromName,  \ntoName, or name parameters\
        \ for a tag in the labeling configuration change. \n"
      operationId: "api_label_links_partial_update"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/LabelLink"
        x-exportParamName: "Data"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/LabelLink"
  /api/labels/:
    get:
      tags:
      - "Labels"
      summary: "List labels"
      description: "List all custom labels added to your project separately from the\
        \ labeling configuration."
      operationId: "api_labels_list"
      parameters:
      - name: "page"
        in: "query"
        description: "A page number within the paginated result set."
        required: false
        type: "integer"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_1"
    post:
      tags:
      - "Labels"
      summary: "Create labels"
      description: "Add labels to your project without updating the labeling configuration."
      operationId: "api_labels_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/LabelCreate"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/LabelCreate"
  /api/labels/bulk:
    post:
      tags:
      - "Labels"
      summary: "Bulk update labels"
      description: "\nIf you want to update the labels in saved annotations, use this\
        \ endpoint.\n"
      operationId: "api_labels_bulk_create"
      parameters: []
      responses:
        "201":
          description: ""
  /api/labels/{id}/:
    get:
      tags:
      - "Labels"
      summary: "Get label"
      description: "\nRetrieve a specific custom label used for your project by its\
        \ ID.\n"
      operationId: "api_labels_read"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Label"
    delete:
      tags:
      - "Labels"
      summary: "Remove labels"
      description: "Remove labels from your project without updating the labeling\
        \ configuration."
      operationId: "api_labels_delete"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "204":
          description: ""
    patch:
      tags:
      - "Labels"
      summary: "Update labels"
      description: "Update labels used for your project without updating the labeling\
        \ configuration."
      operationId: "api_labels_partial_update"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/Label"
        x-exportParamName: "Data"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Label"
  /api/ml/:
    get:
      tags:
      - "Machine Learning"
      summary: "List ML backends"
      description: "\nList all configured ML backends for a specific project by ID.\n\
        Use the following cURL command:\n```bash\ncurl https://localhost:8080/api/ml?project={project_id}\
        \ -H 'Authorization: Token abc123'\n"
      operationId: "api_ml_list"
      parameters:
      - name: "project"
        in: "query"
        description: "Project ID"
        required: false
        type: "integer"
        x-exportParamName: "Project"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MLBackend"
    post:
      tags:
      - "Machine Learning"
      summary: "Add ML Backend"
      description: "\nAdd an ML backend to a project using the Label Studio UI or\
        \ by sending a POST request using the following cURL \ncommand:\n```bash\n\
        curl -X POST -H 'Content-type: application/json' https://localhost:8080/api/ml\
        \ -H 'Authorization: Token abc123'\\\n--data '{\"url\": \"http://localhost:9090\"\
        , \"project\": {project_id}}' \n"
      operationId: "api_ml_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/data"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/data"
  /api/ml/{id}:
    get:
      tags:
      - "Machine Learning"
      summary: "Get ML Backend"
      description: "\nGet details about a specific ML backend connection by ID. For\
        \ example, make a GET request using the\nfollowing cURL command:\n```bash\n\
        curl https://localhost:8080/api/ml/{ml_backend_ID} -H 'Authorization: Token\
        \ abc123'\n"
      operationId: "api_ml_read"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this ml backend."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/MLBackend"
    delete:
      tags:
      - "Machine Learning"
      summary: "Remove ML Backend"
      description: "\nRemove an existing ML backend connection by ID. For example,\
        \ use the\nfollowing cURL command:\n```bash\ncurl -X DELETE https://localhost:8080/api/ml/{ml_backend_ID}\
        \ -H 'Authorization: Token abc123'\n"
      operationId: "api_ml_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this ml backend."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "204":
          description: ""
    patch:
      tags:
      - "Machine Learning"
      summary: "Update ML Backend"
      description: "\nUpdate ML backend parameters using the Label Studio UI or by\
        \ sending a PATCH request using the following cURL command:\n```bash\ncurl\
        \ -X PATCH -H 'Content-type: application/json' https://localhost:8080/api/ml/{ml_backend_ID}\
        \ -H 'Authorization: Token abc123'\\\n--data '{\"url\": \"http://localhost:9091\"\
        }' \n"
      operationId: "api_ml_partial_update"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this ml backend."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/MLBackend"
        x-exportParamName: "Data"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/MLBackend"
  /api/ml/{id}/interactive-annotating:
    post:
      tags:
      - "Machine Learning"
      summary: "Request Interactive Annotation"
      description: "\nSend a request to the machine learning backend set up to be\
        \ used for interactive preannotations to retrieve a\npredicted region based\
        \ on annotator input. \nSee [set up machine learning](https://labelstud.io/guide/ml.html#Get-interactive-preannotations)\
        \ for more.\n"
      operationId: "api_ml_interactive-annotating_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/MLInteractiveAnnotatingRequest"
        x-exportParamName: "Data"
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this ML backend."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Interactive annotation has succeeded."
  /api/ml/{id}/train:
    post:
      tags:
      - "Machine Learning"
      summary: "Train"
      description: "\nAfter you add an ML backend, call this API with the ML backend\
        \ ID to start training with \nalready-labeled tasks. \n\nGet the ML backend\
        \ ID by [listing the ML backends for a project](https://labelstud.io/api/#operation/api_ml_list).\n"
      operationId: "api_ml_train_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/data_1"
        x-exportParamName: "Data"
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this ML backend."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Training has successfully started."
        "500":
          description: "Training error"
          schema:
            type: "string"
            title: "Error message"
            description: "Error message"
            example: "Server responded with an error."
  /api/ml/{id}/versions:
    get:
      tags:
      - "Machine Learning"
      summary: "Get model versions"
      description: "Get available versions of the model."
      operationId: "api_ml_versions_read"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "List of available versions."
  /api/organizations/:
    get:
      tags:
      - "Organizations"
      summary: "List your organizations"
      description: "\nReturn a list of the organizations you've created or that you\
        \ have access to.\n"
      operationId: "api_organizations_list"
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/OrganizationId"
  /api/organizations/{id}:
    get:
      tags:
      - "Organizations"
      summary: "Get organization settings"
      description: "Retrieve the settings for a specific organization by ID."
      operationId: "api_organizations_read"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this organization."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Organization"
    patch:
      tags:
      - "Organizations"
      summary: "Update organization settings"
      description: "Update the settings for a specific organization by ID."
      operationId: "api_organizations_partial_update"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this organization."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/Organization"
        x-exportParamName: "Data"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Organization"
  /api/organizations/{id}/memberships:
    get:
      tags:
      - "Organizations"
      summary: "Get organization members list"
      description: "Retrieve a list of the organization members and their IDs."
      operationId: "api_organizations_memberships_list"
      parameters:
      - name: "page"
        in: "query"
        description: "A page number within the paginated result set."
        required: false
        type: "integer"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "page_size"
        in: "query"
        description: "Number of results to return per page."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this organization."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_2"
  /api/organizations/{id}/memberships/{user_pk}/:
    delete:
      tags:
      - "Organizations"
      summary: "Soft delete an organization member"
      description: "Soft delete a member from the organization."
      operationId: "api_organizations_memberships_delete"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "pk"
        in: "path"
        description: "A unique integer value identifying this organization."
        required: true
        type: "integer"
        x-exportParamName: "Pk"
      - name: "user_pk"
        in: "path"
        description: "A unique integer value identifying the user to be deleted from\
          \ the organization."
        required: true
        type: "integer"
        x-exportParamName: "UserPk"
      responses:
        "204":
          description: "Member deleted successfully."
        "404":
          description: "Member not found"
        "405":
          description: "User cannot soft delete self."
  /api/predictions/:
    get:
      tags:
      - "Predictions"
      summary: "List predictions"
      description: "List all predictions and their IDs."
      operationId: "api_predictions_list"
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Prediction"
    post:
      tags:
      - "Predictions"
      summary: "Create prediction"
      description: "Create a prediction for a specific task."
      operationId: "api_predictions_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/Prediction"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/Prediction"
  /api/predictions/{id}/:
    get:
      tags:
      - "Predictions"
      summary: "Get prediction details"
      description: "Get details about a specific prediction by its ID."
      operationId: "api_predictions_read"
      parameters:
      - name: "id"
        in: "path"
        description: "Prediction ID"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Prediction"
    put:
      tags:
      - "Predictions"
      summary: "Put prediction"
      description: "Overwrite prediction data by prediction ID."
      operationId: "api_predictions_update"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/Prediction"
        x-exportParamName: "Data"
      - name: "id"
        in: "path"
        description: "Prediction ID"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Prediction"
    delete:
      tags:
      - "Predictions"
      summary: "Delete prediction"
      description: "Delete a prediction by prediction ID."
      operationId: "api_predictions_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "Prediction ID"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "204":
          description: ""
    patch:
      tags:
      - "Predictions"
      summary: "Update prediction"
      description: "Update prediction data by prediction ID."
      operationId: "api_predictions_partial_update"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/Prediction"
        x-exportParamName: "Data"
      - name: "id"
        in: "path"
        description: "Prediction ID"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Prediction"
  /api/projects/:
    get:
      tags:
      - "Projects"
      summary: "List your projects"
      description: "\nReturn a list of the projects that you've created.\n\nTo perform\
        \ most tasks with the Label Studio API, you must specify the project ID, sometimes\
        \ referred to as the `pk`.\nTo retrieve a list of your Label Studio projects,\
        \ update the following command to match your own environment.\nReplace the\
        \ domain name, port, and authorization token, then run the following from\
        \ the command line:\n```bash\ncurl -X GET https://localhost:8080/api/projects/\
        \ -H 'Authorization: Token abc123'\n```\n"
      operationId: "api_projects_list"
      parameters:
      - name: "ordering"
        in: "query"
        description: "Which field to use when ordering the results."
        required: false
        type: "string"
        x-exportParamName: "Ordering"
        x-optionalDataType: "String"
      - name: "ids"
        in: "query"
        description: "ids"
        required: false
        type: "string"
        x-exportParamName: "Ids"
        x-optionalDataType: "String"
      - name: "title"
        in: "query"
        description: "title"
        required: false
        type: "string"
        x-exportParamName: "Title"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "A page number within the paginated result set."
        required: false
        type: "integer"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "page_size"
        in: "query"
        description: "Number of results to return per page."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_3"
    post:
      tags:
      - "Projects"
      summary: "Create new project"
      description: "\nCreate a project and set up the labeling interface in Label\
        \ Studio using the API.\n\n```bash\ncurl -H Content-Type:application/json\
        \ -H 'Authorization: Token abc123' -X POST 'https://localhost:8080/api/projects'\
        \     --data '{\"label_config\": \"<View>[...]</View>\"}'\n```\n"
      operationId: "api_projects_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/Project"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/Project"
  /api/projects/validate/:
    post:
      tags:
      - "Projects"
      summary: "Validate label config"
      description: "Validate an arbitrary labeling configuration."
      operationId: "api_projects_validate_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/ProjectLabelConfig"
        x-exportParamName: "Data"
      responses:
        "204":
          description: "Validation success"
  /api/projects/{id}/:
    get:
      tags:
      - "Projects"
      summary: "Get project by ID"
      description: "Retrieve information about a project by project ID."
      operationId: "api_projects_read"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this project."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Project"
    delete:
      tags:
      - "Projects"
      summary: "Delete project"
      description: "Delete a project by specified project ID."
      operationId: "api_projects_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this project."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "204":
          description: ""
    patch:
      tags:
      - "Projects"
      summary: "Update project"
      description: "Update the project settings for a specific project."
      operationId: "api_projects_partial_update"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this project."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/Project"
        x-exportParamName: "Data"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Project"
  /api/projects/{id}/export:
    get:
      tags:
      - "Export"
      summary: "Easy export of tasks and annotations"
      description: "\n<i>Note: if you have a large project it's recommended to use\
        \ \nexport snapshots, this easy export endpoint might have timeouts.</i><br/><br>\n\
        Export annotated tasks as a file in a specific format. \nFor example, to export\
        \ JSON annotations for a project to a file called `annotations.json`,\nrun\
        \ the following from the command line:\n```bash\ncurl -X GET https://localhost:8080/api/projects/{id}/export?exportType=JSON\
        \ -H 'Authorization: Token abc123' --output 'annotations.json'\n```\nTo export\
        \ all tasks, including skipped tasks and others without annotations, run the\
        \ following from the command line:\n```bash\ncurl -X GET https://localhost:8080/api/projects/{id}/export?exportType=JSON&download_all_tasks=true\
        \ -H 'Authorization: Token abc123' --output 'annotations.json'\n```\nTo export\
        \ specific tasks with IDs of 123 and 345, run the following from the command\
        \ line:\n```bash\ncurl -X GET https://localhost:8080/api/projects/{id}/export?ids[]=123\\\
        &ids[]=345 -H 'Authorization: Token abc123' --output 'annotations.json'\n\
        ```\n"
      operationId: "api_projects_export_read"
      parameters:
      - name: "export_type"
        in: "query"
        description: "Selected export format (JSON by default)"
        required: false
        type: "string"
        x-exportParamName: "ExportType"
        x-optionalDataType: "String"
      - name: "download_all_tasks"
        in: "query"
        description: "\nIf true, download all tasks regardless of status. If false,\
          \ download only annotated tasks.\n"
        required: false
        type: "string"
        x-exportParamName: "DownloadAllTasks"
        x-optionalDataType: "String"
      - name: "download_resources"
        in: "query"
        description: "\nIf true, download all resource files such as images, audio,\
          \ and others relevant to the tasks. \n"
        required: false
        type: "boolean"
        x-exportParamName: "DownloadResources"
        x-optionalDataType: "Bool"
      - name: "ids"
        in: "query"
        description: "\nSpecify a list of task IDs to retrieve only the details for\
          \ those tasks.\n"
        required: false
        type: "array"
        items:
          type: "integer"
          description: "Individual task ID"
          title: "Task ID"
        collectionFormat: "multi"
        x-exportParamName: "Ids"
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this project."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Exported data"
          schema:
            type: "file"
            title: "Export file"
            description: "Export file with results"
  /api/projects/{id}/export/formats:
    get:
      tags:
      - "Export"
      summary: "Get export formats"
      description: "Retrieve the available export formats for the current project\
        \ by ID."
      operationId: "api_projects_export_formats_read"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this project."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Export formats"
          schema:
            title: "Format list"
            type: "array"
            description: "List of available formats"
            items:
              type: "string"
              title: "Export format"
  /api/projects/{id}/exports/:
    get:
      tags:
      - "Export"
      summary: "List all export snapshots"
      description: "\nReturns a list of exported files for a specific project by ID.\n"
      operationId: "api_projects_exports_list"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this project."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Export"
    post:
      tags:
      - "Export"
      summary: "Create new export snapshot"
      description: "\nCreate a new export request to start a background task and generate\
        \ an export file for a specific project by ID.\n"
      operationId: "api_projects_exports_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/ExportCreate"
        x-exportParamName: "Data"
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this project."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/ExportCreate"
  /api/projects/{id}/exports/{export_pk}:
    get:
      tags:
      - "Export"
      summary: "Get export snapshot by ID"
      description: "\nRetrieve information about an export file by export ID for a\
        \ specific project.\n"
      operationId: "api_projects_exports_read"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this project."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - name: "export_pk"
        in: "path"
        description: "Primary key identifying the export file."
        required: true
        type: "string"
        x-exportParamName: "ExportPk"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Export"
    delete:
      tags:
      - "Export"
      summary: "Delete export snapshot"
      description: "\nDelete an export file by specified export ID.\n"
      operationId: "api_projects_exports_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this project."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - name: "export_pk"
        in: "path"
        description: "Primary key identifying the export file."
        required: true
        type: "string"
        x-exportParamName: "ExportPk"
      responses:
        "204":
          description: ""
  /api/projects/{id}/exports/{export_pk}/convert:
    post:
      tags:
      - "Export"
      summary: "Export conversion"
      description: "\nConvert export snapshot to selected format\n"
      operationId: "api_projects_exports_convert_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/ExportConvert"
        x-exportParamName: "Data"
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this project."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - name: "export_pk"
        in: "path"
        description: "Primary key identifying the export file."
        required: true
        type: "string"
        x-exportParamName: "ExportPk"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/ExportConvert"
  /api/projects/{id}/exports/{export_pk}/download:
    get:
      tags:
      - "Export"
      summary: "Download export snapshot as file in specified format"
      description: "\nDownload an export file in the specified format for a specific\
        \ project. Specify the project ID with the `id` \nparameter in the path and\
        \ the ID of the export file you want to download using the `export_pk` parameter\
        \ \nin the path. \n\nGet the `export_pk` from the response of the request\
        \ to [Create new export](/api#operation/api_projects_exports_create)\nor after\
        \ [listing export files](/api#operation/api_projects_exports_list).\n"
      operationId: "api_projects_exports_download_read"
      parameters:
      - name: "exportType"
        in: "query"
        description: "Selected export format"
        required: false
        type: "string"
        x-exportParamName: "ExportType"
        x-optionalDataType: "String"
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this project."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - name: "export_pk"
        in: "path"
        description: "Primary key identifying the export file."
        required: true
        type: "string"
        x-exportParamName: "ExportPk"
      responses:
        "200":
          description: ""
  /api/projects/{id}/file-uploads:
    get:
      tags:
      - "Import"
      summary: "Get files list"
      description: "\nRetrieve the list of uploaded files used to create labeling\
        \ tasks for a specific project.\n"
      operationId: "api_projects_file-uploads_list"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this file upload."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - name: "all"
        in: "query"
        description: "Set to \"true\" if you want to retrieve all file uploads"
        required: false
        type: "boolean"
        x-exportParamName: "All"
        x-optionalDataType: "Bool"
      - name: "ids"
        in: "query"
        description: "Specify the list of file upload IDs to retrieve, e.g. ids=[1,2,3]"
        required: false
        type: "array"
        items:
          type: "integer"
          title: "File upload ID"
        collectionFormat: "multi"
        x-exportParamName: "Ids"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/FileUpload"
    delete:
      tags:
      - "Import"
      summary: "Delete files"
      description: "\nDelete uploaded files for a specific project.\n"
      operationId: "api_projects_file-uploads_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this file upload."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "204":
          description: ""
  /api/projects/{id}/import:
    post:
      tags:
      - "Import"
      summary: "Import tasks"
      description: "\nImport data as labeling tasks in bulk using this API endpoint.\
        \ You can use this API endpoint to import multiple tasks.\nOne POST request\
        \ is limited at 250K tasks and 200 MB.\n\n**Note:** Imported data is verified\
        \ against a project *label_config* and must\ninclude all variables that were\
        \ used in the *label_config*. For example,\nif the label configuration has\
        \ a *$text* variable, then each item in a data object\nmust include a \"text\"\
        \ field.\n<br>\n\n## POST requests\n<hr style=\"opacity:0.3\">\n\nThere are\
        \ three possible ways to import tasks with this endpoint:\n\n### 1\\. **POST\
        \ with data**\nSend JSON tasks as POST data. Only JSON is supported for POSTing\
        \ files directly.\nUpdate this example to specify your authorization token\
        \ and Label Studio instance host, then run the following from\nthe command\
        \ line.\n\n```bash\ncurl -H 'Content-Type: application/json' -H 'Authorization:\
        \ Token abc123' \\\n-X POST 'https://localhost:8080/api/projects/1/import'\
        \ --data '[{\"text\": \"Some text 1\"}, {\"text\": \"Some text 2\"}]'\n```\n\
        \n### 2\\. **POST with files**\nSend tasks as files. You can attach multiple\
        \ files with different names.\n\n- **JSON**: text files in JavaScript object\
        \ notation format\n- **CSV**: text files with tables in Comma Separated Values\
        \ format\n- **TSV**: text files with tables in Tab Separated Value format\n\
        - **TXT**: simple text files are similar to CSV with one column and no header,\
        \ supported for projects with one source only\n\nUpdate this example to specify\
        \ your authorization token, Label Studio instance host, and file name and\
        \ path,\nthen run the following from the command line:\n\n```bash\ncurl -H\
        \ 'Authorization: Token abc123' \\\n-X POST 'https://localhost:8080/api/projects/1/import'\
        \ -F ‘file=@path/to/my_file.csv’\n```\n\n### 3\\. **POST with URL**\nYou can\
        \ also provide a URL to a file with labeling tasks. Supported file formats\
        \ are the same as in option 2.\n\n```bash\ncurl -H 'Content-Type: application/json'\
        \ -H 'Authorization: Token abc123' \\\n-X POST 'https://localhost:8080/api/projects/1/import'\
        \ \\\n--data '[{\"url\": \"http://example.com/test1.csv\"}, {\"url\": \"http://example.com/test2.csv\"\
        }]'\n```\n\n<br>\n"
      operationId: "api_projects_import_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/ImportApi"
        x-exportParamName: "Data"
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this project."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "201":
          description: "Tasks successfully imported"
          schema:
            $ref: "#/definitions/Task creation response"
        "400":
          description: ""
          schema:
            type: "string"
            title: "Incorrect task data"
            description: "String with error description"
  /api/projects/{id}/imports/{import_pk}/:
    get:
      tags:
      - "Projects"
      summary: "Get project import info"
      description: "Return data related to async project import operation"
      operationId: "api_projects_imports_read"
      parameters:
      - name: "import_pk"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ImportPk"
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this project import."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/ProjectImport"
  /api/projects/{id}/reimports/{reimport_pk}/:
    get:
      tags:
      - "Projects"
      summary: "Get project reimport info"
      description: "Return data related to async project reimport operation"
      operationId: "api_projects_reimports_read"
      parameters:
      - name: "reimport_pk"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ReimportPk"
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this project reimport."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/ProjectReimport"
  /api/projects/{id}/tasks/:
    get:
      tags:
      - "Projects"
      summary: "List project tasks"
      description: "\nRetrieve a paginated list of tasks for a specific project. For\
        \ example, use the following cURL command:\n```bash\ncurl -X GET https://localhost:8080/api/projects/{id}/tasks/?page=1&page_size=10\
        \ -H 'Authorization: Token abc123'\n```\n"
      operationId: "api_projects_tasks_list"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this project."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - name: "page"
        in: "query"
        description: "[or \"start\"] current page"
        required: false
        type: "integer"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "page_size"
        in: "query"
        description: "[or \"length\"] tasks per page, use -1 to obtain all tasks (in\
          \ this case \"page\" has no effect and this operation might be slow)"
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: ""
    delete:
      tags:
      - "Projects"
      summary: "Delete all tasks"
      description: "Delete all tasks from a specific project."
      operationId: "api_projects_tasks_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this project."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "204":
          description: ""
  /api/projects/{id}/validate/:
    post:
      tags:
      - "Projects"
      summary: "Validate project label config"
      description: "\nDetermine whether the label configuration for a specific project\
        \ is valid.\n"
      operationId: "api_projects_validate_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/ProjectLabelConfig"
        x-exportParamName: "Data"
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this project."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/ProjectLabelConfig"
  /api/storages/:
    get:
      tags:
      - "Storage"
      summary: "List all import storages from the project"
      description: "Retrieve a list of the import storages of all types with their\
        \ IDs."
      operationId: "api_storages_list"
      parameters:
      - name: "project"
        in: "path"
        description: "A unique integer value identifying your project."
        required: true
        type: "integer"
        x-exportParamName: "Project"
      responses:
        "200":
          description: "List of ImportStorageSerializer"
  /api/storages/azure/:
    get:
      tags:
      - "Storage: Azure"
      summary: "Get all import storage"
      description: "Get list of all Azure import storage connections."
      operationId: "api_storages_azure_list"
      parameters:
      - name: "project"
        in: "query"
        description: "Project ID"
        required: false
        type: "integer"
        x-exportParamName: "Project"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AzureBlobImportStorage"
    post:
      tags:
      - "Storage: Azure"
      summary: "Create new storage"
      description: "Get new Azure import storage"
      operationId: "api_storages_azure_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/AzureBlobImportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/AzureBlobImportStorage"
  /api/storages/azure/validate:
    post:
      tags:
      - "Storage: Azure"
      summary: "Validate import storage"
      description: "Validate a specific Azure import storage connection."
      operationId: "api_storages_azure_validate_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/AzureBlobImportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/AzureBlobImportStorage"
  /api/storages/azure/{id}:
    get:
      tags:
      - "Storage: Azure"
      summary: "Get import storage"
      description: "Get a specific Azure import storage connection."
      operationId: "api_storages_azure_read"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this azure blob import storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/AzureBlobImportStorage"
    delete:
      tags:
      - "Storage: Azure"
      summary: "Delete import storage"
      description: "Delete a specific Azure import storage connection."
      operationId: "api_storages_azure_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this azure blob import storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "204":
          description: ""
    patch:
      tags:
      - "Storage: Azure"
      summary: "Update import storage"
      description: "Update a specific Azure import storage connection."
      operationId: "api_storages_azure_partial_update"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this azure blob import storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/AzureBlobImportStorage"
        x-exportParamName: "Data"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/AzureBlobImportStorage"
  /api/storages/azure/{id}/sync:
    post:
      tags:
      - "Storage: Azure"
      summary: "Sync import storage"
      description: "Sync tasks from an Azure import storage connection."
      operationId: "api_storages_azure_sync_create"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/AzureBlobImportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/AzureBlobImportStorage"
  /api/storages/export:
    get:
      tags:
      - "Storage"
      summary: "List all export storages from the project"
      description: "Retrieve a list of the export storages of all types with their\
        \ IDs."
      operationId: "api_storages_export_list"
      parameters:
      - name: "project"
        in: "path"
        description: "A unique integer value identifying your project."
        required: true
        type: "integer"
        x-exportParamName: "Project"
      responses:
        "200":
          description: "List of ExportStorageSerializer"
  /api/storages/export/azure:
    get:
      tags:
      - "Storage: Azure"
      summary: "Get all export storage"
      description: "Get a list of all Azure export storage connections."
      operationId: "api_storages_export_azure_list"
      parameters:
      - name: "project"
        in: "query"
        description: "Project ID"
        required: false
        type: "integer"
        x-exportParamName: "Project"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AzureBlobExportStorage"
    post:
      tags:
      - "Storage: Azure"
      summary: "Create export storage"
      description: "Create a new Azure export storage connection to store annotations."
      operationId: "api_storages_export_azure_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/AzureBlobExportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/AzureBlobExportStorage"
  /api/storages/export/azure/validate:
    post:
      tags:
      - "Storage: Azure"
      summary: "Validate export storage"
      description: "Validate a specific Azure export storage connection."
      operationId: "api_storages_export_azure_validate_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/AzureBlobExportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/AzureBlobExportStorage"
  /api/storages/export/azure/{id}:
    get:
      tags:
      - "Storage: Azure"
      summary: "Get export storage"
      description: "Get a specific Azure export storage connection."
      operationId: "api_storages_export_azure_read"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this azure blob export storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/AzureBlobExportStorage"
    delete:
      tags:
      - "Storage: Azure"
      summary: "Delete export storage"
      description: "Delete a specific Azure export storage connection."
      operationId: "api_storages_export_azure_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this azure blob export storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "204":
          description: ""
    patch:
      tags:
      - "Storage: Azure"
      summary: "Update export storage"
      description: "Update a specific Azure export storage connection."
      operationId: "api_storages_export_azure_partial_update"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this azure blob export storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/AzureBlobExportStorage"
        x-exportParamName: "Data"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/AzureBlobExportStorage"
  /api/storages/export/azure/{id}/sync:
    post:
      tags:
      - "Storage: Azure"
      summary: "Sync export storage"
      description: "Sync tasks from an Azure export storage connection."
      operationId: "api_storages_export_azure_sync_create"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/AzureBlobExportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/AzureBlobExportStorage"
  /api/storages/export/gcs:
    get:
      tags:
      - "Storage: GCS"
      summary: "Get all export storage"
      description: "Get a list of all GCS export storage connections."
      operationId: "api_storages_export_gcs_list"
      parameters:
      - name: "project"
        in: "query"
        description: "Project ID"
        required: false
        type: "integer"
        x-exportParamName: "Project"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GCSExportStorage"
    post:
      tags:
      - "Storage: GCS"
      summary: "Create export storage"
      description: "Create a new GCS export storage connection to store annotations."
      operationId: "api_storages_export_gcs_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/GCSExportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/GCSExportStorage"
  /api/storages/export/gcs/validate:
    post:
      tags:
      - "Storage: GCS"
      summary: "Validate export storage"
      description: "Validate a specific GCS export storage connection."
      operationId: "api_storages_export_gcs_validate_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/GCSExportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/GCSExportStorage"
  /api/storages/export/gcs/{id}:
    get:
      tags:
      - "Storage: GCS"
      summary: "Get export storage"
      description: "Get a specific GCS export storage connection."
      operationId: "api_storages_export_gcs_read"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this gcs export storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/GCSExportStorage"
    delete:
      tags:
      - "Storage: GCS"
      summary: "Delete export storage"
      description: "Delete a specific GCS export storage connection."
      operationId: "api_storages_export_gcs_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this gcs export storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "204":
          description: ""
    patch:
      tags:
      - "Storage: GCS"
      summary: "Update export storage"
      description: "Update a specific GCS export storage connection."
      operationId: "api_storages_export_gcs_partial_update"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this gcs export storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/GCSExportStorage"
        x-exportParamName: "Data"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/GCSExportStorage"
  /api/storages/export/gcs/{id}/sync:
    post:
      tags:
      - "Storage: GCS"
      summary: "Sync export storage"
      description: "Sync tasks from an GCS export storage connection."
      operationId: "api_storages_export_gcs_sync_create"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/GCSExportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/GCSExportStorage"
  /api/storages/export/localfiles:
    get:
      tags:
      - "Storage: Local"
      summary: "Get all export storage"
      description: "Get a list of all Local export storage connections."
      operationId: "api_storages_export_localfiles_list"
      parameters:
      - name: "project"
        in: "query"
        description: "Project ID"
        required: false
        type: "integer"
        x-exportParamName: "Project"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/LocalFilesExportStorage"
    post:
      tags:
      - "Storage: Local"
      summary: "Create export storage"
      description: "Create a new local file export storage connection to store annotations."
      operationId: "api_storages_export_localfiles_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/LocalFilesExportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/LocalFilesExportStorage"
  /api/storages/export/localfiles/validate:
    post:
      tags:
      - "Storage: Local"
      summary: "Validate export storage"
      description: "Validate a specific local file export storage connection."
      operationId: "api_storages_export_localfiles_validate_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/LocalFilesExportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/LocalFilesExportStorage"
  /api/storages/export/localfiles/{id}:
    get:
      tags:
      - "Storage: Local"
      summary: "Get export storage"
      description: "Get a specific local file export storage connection."
      operationId: "api_storages_export_localfiles_read"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this local files export storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/LocalFilesExportStorage"
    delete:
      tags:
      - "Storage: Local"
      summary: "Delete export storage"
      description: "Delete a specific local file export storage connection."
      operationId: "api_storages_export_localfiles_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this local files export storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "204":
          description: ""
    patch:
      tags:
      - "Storage: Local"
      summary: "Update export storage"
      description: "Update a specific local file export storage connection."
      operationId: "api_storages_export_localfiles_partial_update"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this local files export storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/LocalFilesExportStorage"
        x-exportParamName: "Data"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/LocalFilesExportStorage"
  /api/storages/export/localfiles/{id}/sync:
    post:
      tags:
      - "Storage: Local"
      summary: "Sync export storage"
      description: "Sync tasks from a local file export storage connection."
      operationId: "api_storages_export_localfiles_sync_create"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/LocalFilesExportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/LocalFilesExportStorage"
  /api/storages/export/redis:
    get:
      tags:
      - "Storage: Redis"
      summary: "Get all export storage"
      description: "Get a list of all Redis export storage connections."
      operationId: "api_storages_export_redis_list"
      parameters:
      - name: "project"
        in: "query"
        description: "Project ID"
        required: false
        type: "integer"
        x-exportParamName: "Project"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RedisExportStorage"
    post:
      tags:
      - "Storage: Redis"
      summary: "Create export storage"
      description: "Create a new Redis export storage connection to store annotations."
      operationId: "api_storages_export_redis_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/RedisExportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/RedisExportStorage"
  /api/storages/export/redis/validate:
    post:
      tags:
      - "Storage: Redis"
      summary: "Validate export storage"
      description: "Validate a specific Redis export storage connection."
      operationId: "api_storages_export_redis_validate_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/RedisExportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/RedisExportStorage"
  /api/storages/export/redis/{id}:
    get:
      tags:
      - "Storage: Redis"
      summary: "Get export storage"
      description: "Get a specific Redis export storage connection."
      operationId: "api_storages_export_redis_read"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this redis export storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/RedisExportStorage"
    delete:
      tags:
      - "Storage: Redis"
      summary: "Delete export storage"
      description: "Delete a specific Redis export storage connection."
      operationId: "api_storages_export_redis_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this redis export storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "204":
          description: ""
    patch:
      tags:
      - "Storage: Redis"
      summary: "Update export storage"
      description: "Update a specific Redis export storage connection."
      operationId: "api_storages_export_redis_partial_update"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this redis export storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/RedisExportStorage"
        x-exportParamName: "Data"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/RedisExportStorage"
  /api/storages/export/redis/{id}/sync:
    post:
      tags:
      - "Storage: Redis"
      summary: "Sync export storage"
      description: "Sync tasks from a specific Redis export storage connection."
      operationId: "api_storages_export_redis_sync_create"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/RedisExportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/RedisExportStorage"
  /api/storages/export/s3:
    get:
      tags:
      - "Storage:S3"
      summary: "Get all export storage"
      description: "Get a list of all S3 export storage connections."
      operationId: "api_storages_export_s3_list"
      parameters:
      - name: "project"
        in: "query"
        description: "Project ID"
        required: false
        type: "integer"
        x-exportParamName: "Project"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/S3ExportStorage"
    post:
      tags:
      - "Storage:S3"
      summary: "Create export storage"
      description: "Create a new S3 export storage connection to store annotations."
      operationId: "api_storages_export_s3_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/S3ExportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/S3ExportStorage"
  /api/storages/export/s3/validate:
    post:
      tags:
      - "Storage:S3"
      summary: "Validate export storage"
      description: "Validate a specific S3 export storage connection."
      operationId: "api_storages_export_s3_validate_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/S3ExportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/S3ExportStorage"
  /api/storages/export/s3/{id}:
    get:
      tags:
      - "Storage:S3"
      summary: "Get export storage"
      description: "Get a specific S3 export storage connection."
      operationId: "api_storages_export_s3_read"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this s3 export storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/S3ExportStorage"
    delete:
      tags:
      - "Storage:S3"
      summary: "Delete export storage"
      description: "Delete a specific S3 export storage connection."
      operationId: "api_storages_export_s3_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this s3 export storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "204":
          description: ""
    patch:
      tags:
      - "Storage:S3"
      summary: "Update export storage"
      description: "Update a specific S3 export storage connection."
      operationId: "api_storages_export_s3_partial_update"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this s3 export storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/S3ExportStorage"
        x-exportParamName: "Data"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/S3ExportStorage"
  /api/storages/export/s3/{id}/sync:
    post:
      tags:
      - "Storage:S3"
      summary: "Sync export storage"
      description: "Sync tasks from an S3 export storage connection."
      operationId: "api_storages_export_s3_sync_create"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/S3ExportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/S3ExportStorage"
  /api/storages/export/types:
    get:
      tags:
      - "Storage"
      summary: "List all export storages types"
      description: "Retrieve a list of the export storages types."
      operationId: "api_storages_export_types_list"
      parameters: []
      responses:
        "200":
          description: "A list of export storages types {'name': name, 'title': title}."
  /api/storages/gcs/:
    get:
      tags:
      - "Storage: GCS"
      summary: "Get all import storage"
      description: "Get a list of all GCS import storage connections."
      operationId: "api_storages_gcs_list"
      parameters:
      - name: "project"
        in: "query"
        description: "Project ID"
        required: false
        type: "integer"
        x-exportParamName: "Project"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GCSImportStorage"
    post:
      tags:
      - "Storage: GCS"
      summary: "Create import storage"
      description: "Create a new GCS import storage connection."
      operationId: "api_storages_gcs_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/GCSImportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/GCSImportStorage"
  /api/storages/gcs/validate:
    post:
      tags:
      - "Storage: GCS"
      summary: "Validate import storage"
      description: "Validate a specific GCS import storage connection."
      operationId: "api_storages_gcs_validate_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/GCSImportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/GCSImportStorage"
  /api/storages/gcs/{id}:
    get:
      tags:
      - "Storage: GCS"
      summary: "Get import storage"
      description: "Get a specific GCS import storage connection."
      operationId: "api_storages_gcs_read"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this gcs import storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/GCSImportStorage"
    delete:
      tags:
      - "Storage: GCS"
      summary: "Delete import storage"
      description: "Delete a specific GCS import storage connection."
      operationId: "api_storages_gcs_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this gcs import storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "204":
          description: ""
    patch:
      tags:
      - "Storage: GCS"
      summary: "Update import storage"
      description: "Update a specific GCS import storage connection."
      operationId: "api_storages_gcs_partial_update"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this gcs import storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/GCSImportStorage"
        x-exportParamName: "Data"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/GCSImportStorage"
  /api/storages/gcs/{id}/sync:
    post:
      tags:
      - "Storage: GCS"
      summary: "Sync import storage"
      description: "Sync tasks from an GCS import storage connection."
      operationId: "api_storages_gcs_sync_create"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/GCSImportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/GCSImportStorage"
  /api/storages/localfiles/:
    get:
      tags:
      - "Storage: Local"
      summary: "Get all import storage"
      description: "Get a list of all local file import storage connections."
      operationId: "api_storages_localfiles_list"
      parameters:
      - name: "project"
        in: "query"
        description: "Project ID"
        required: false
        type: "integer"
        x-exportParamName: "Project"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/LocalFilesImportStorage"
    post:
      tags:
      - "Storage: Local"
      summary: "Create import storage"
      description: "Create a new local file import storage connection."
      operationId: "api_storages_localfiles_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/LocalFilesImportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/LocalFilesImportStorage"
  /api/storages/localfiles/validate:
    post:
      tags:
      - "Storage: Local"
      summary: "Validate import storage"
      description: "Validate a specific local file import storage connection."
      operationId: "api_storages_localfiles_validate_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/LocalFilesImportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/LocalFilesImportStorage"
  /api/storages/localfiles/{id}:
    get:
      tags:
      - "Storage: Local"
      summary: "Get import storage"
      description: "Get a specific local file import storage connection."
      operationId: "api_storages_localfiles_read"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this local files import storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/LocalFilesImportStorage"
    delete:
      tags:
      - "Storage: Local"
      summary: "Delete import storage"
      description: "Delete a specific local import storage connection."
      operationId: "api_storages_localfiles_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this local files import storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "204":
          description: ""
    patch:
      tags:
      - "Storage: Local"
      summary: "Update import storage"
      description: "Update a specific local file import storage connection."
      operationId: "api_storages_localfiles_partial_update"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this local files import storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/LocalFilesImportStorage"
        x-exportParamName: "Data"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/LocalFilesImportStorage"
  /api/storages/localfiles/{id}/sync:
    post:
      tags:
      - "Storage: Local"
      summary: "Sync import storage"
      description: "Sync tasks from a local file import storage connection."
      operationId: "api_storages_localfiles_sync_create"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/LocalFilesImportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/LocalFilesImportStorage"
  /api/storages/redis/:
    get:
      tags:
      - "Storage: Redis"
      summary: "Get all import storage"
      description: "Get a list of all Redis import storage connections."
      operationId: "api_storages_redis_list"
      parameters:
      - name: "project"
        in: "query"
        description: "Project ID"
        required: false
        type: "integer"
        x-exportParamName: "Project"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RedisImportStorage"
    post:
      tags:
      - "Storage: Redis"
      summary: "Create import storage"
      description: "Create a new Redis import storage connection."
      operationId: "api_storages_redis_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/RedisImportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/RedisImportStorage"
  /api/storages/redis/validate:
    post:
      tags:
      - "Storage: Redis"
      summary: "Validate import storage"
      description: "Validate a specific Redis import storage connection."
      operationId: "api_storages_redis_validate_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/RedisImportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/RedisImportStorage"
  /api/storages/redis/{id}:
    get:
      tags:
      - "Storage: Redis"
      summary: "Get import storage"
      description: "Get a specific Redis import storage connection."
      operationId: "api_storages_redis_read"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this redis import storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/RedisImportStorage"
    delete:
      tags:
      - "Storage: Redis"
      summary: "Delete import storage"
      description: "Delete a specific Redis import storage connection."
      operationId: "api_storages_redis_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this redis import storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "204":
          description: ""
    patch:
      tags:
      - "Storage: Redis"
      summary: "Update import storage"
      description: "Update a specific Redis import storage connection."
      operationId: "api_storages_redis_partial_update"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this redis import storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/RedisImportStorage"
        x-exportParamName: "Data"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/RedisImportStorage"
  /api/storages/redis/{id}/sync:
    post:
      tags:
      - "Storage: Redis"
      summary: "Sync import storage"
      description: "Sync tasks from a specific Redis import storage connection."
      operationId: "api_storages_redis_sync_create"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/RedisImportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/RedisImportStorage"
  /api/storages/s3/:
    get:
      tags:
      - "Storage:S3"
      summary: "Get import storage"
      description: "Get a list of all S3 import storage connections."
      operationId: "api_storages_s3_list"
      parameters:
      - name: "project"
        in: "query"
        description: "Project ID"
        required: false
        type: "integer"
        x-exportParamName: "Project"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/S3ImportStorage"
    post:
      tags:
      - "Storage:S3"
      summary: "Create new storage"
      description: "Get new S3 import storage"
      operationId: "api_storages_s3_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/S3ImportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/S3ImportStorage"
  /api/storages/s3/validate:
    post:
      tags:
      - "Storage:S3"
      summary: "Validate import storage"
      description: "Validate a specific S3 import storage connection."
      operationId: "api_storages_s3_validate_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/S3ImportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/S3ImportStorage"
  /api/storages/s3/{id}:
    get:
      tags:
      - "Storage:S3"
      summary: "Get import storage"
      description: "Get a specific S3 import storage connection."
      operationId: "api_storages_s3_read"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this s3 import storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/S3ImportStorage"
    delete:
      tags:
      - "Storage:S3"
      summary: "Delete import storage"
      description: "Delete a specific S3 import storage connection."
      operationId: "api_storages_s3_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this s3 import storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "204":
          description: ""
    patch:
      tags:
      - "Storage:S3"
      summary: "Update import storage"
      description: "Update a specific S3 import storage connection."
      operationId: "api_storages_s3_partial_update"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this s3 import storage."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/S3ImportStorage"
        x-exportParamName: "Data"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/S3ImportStorage"
  /api/storages/s3/{id}/sync:
    post:
      tags:
      - "Storage:S3"
      summary: "Sync import storage"
      description: "Sync tasks from an S3 import storage connection."
      operationId: "api_storages_s3_sync_create"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/S3ImportStorage"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/S3ImportStorage"
  /api/storages/types:
    get:
      tags:
      - "Storage"
      summary: "List all import storages types"
      description: "Retrieve a list of the import storages types."
      operationId: "api_storages_types_list"
      parameters: []
      responses:
        "200":
          description: "A list of import storages types {'name': name, 'title': title}."
  /api/tasks/:
    get:
      tags:
      - "Tasks"
      summary: "Get tasks list"
      description: "\nRetrieve a list of tasks with pagination for a specific view\
        \ or project, by using filters and ordering.\n"
      operationId: "api_tasks_list"
      parameters:
      - name: "view"
        in: "query"
        description: "View ID"
        required: false
        type: "integer"
        x-exportParamName: "View"
        x-optionalDataType: "Int32"
      - name: "project"
        in: "query"
        description: "Project ID"
        required: false
        type: "integer"
        x-exportParamName: "Project"
        x-optionalDataType: "Int32"
      - name: "resolve_uri"
        in: "query"
        description: "Resolve task data URIs using Cloud Storage"
        required: false
        type: "boolean"
        x-exportParamName: "ResolveUri"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BaseTask"
    post:
      tags:
      - "Tasks"
      summary: "Create task"
      description: "Create a new labeling task in Label Studio."
      operationId: "api_tasks_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/BaseTask"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/BaseTask"
  /api/tasks/{id}/:
    get:
      tags:
      - "Tasks"
      summary: "Get task"
      description: "\nGet task data, metadata, annotations and other attributes for\
        \ a specific labeling task by task ID.\n"
      operationId: "api_tasks_read"
      parameters:
      - name: "id"
        in: "path"
        description: "Task ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/data_manager_task_serializer"
    delete:
      tags:
      - "Tasks"
      summary: "Delete task"
      description: "Delete a task in Label Studio. This action cannot be undone!"
      operationId: "api_tasks_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "Task ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "204":
          description: ""
    patch:
      tags:
      - "Tasks"
      summary: "Update task"
      description: "Update the attributes of an existing labeling task."
      operationId: "api_tasks_partial_update"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/TaskSimple"
        x-exportParamName: "Data"
      - name: "id"
        in: "path"
        description: "Task ID"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/TaskSimple"
  /api/tasks/{id}/annotations/:
    get:
      tags:
      - "Annotations"
      summary: "Get all task annotations"
      description: "List all annotations for a task."
      operationId: "api_tasks_annotations_list"
      parameters:
      - name: "id"
        in: "path"
        description: "Task ID"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Annotation"
    post:
      tags:
      - "Annotations"
      summary: "Create annotation"
      description: "\nAdd annotations to a task like an annotator does. The content\
        \ of the result field depends on your \nlabeling configuration. For example,\
        \ send the following data as part of your POST \nrequest to send an empty\
        \ annotation with the ID of the user who completed the task:\n\n```json\n\
        {\n\"result\": {},\n\"was_cancelled\": true,\n\"ground_truth\": true,\n\"\
        lead_time\": 0,\n\"task\": 0\n\"completed_by\": 123\n} \n```\n"
      operationId: "api_tasks_annotations_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/Annotation"
        x-exportParamName: "Data"
      - name: "id"
        in: "path"
        description: "Task ID"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/Annotation"
  /api/users/:
    get:
      tags:
      - "Users"
      summary: "List users"
      description: "List the users that exist on the Label Studio server."
      operationId: "api_users_list"
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BaseUser"
    post:
      tags:
      - "Users"
      summary: "Create new user"
      description: "Create a user in Label Studio."
      operationId: "api_users_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/BaseUser"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/BaseUser"
  /api/users/{id}/:
    get:
      tags:
      - "Users"
      summary: "Get user info"
      description: "Get info about a specific Label Studio user, based on the user\
        \ ID."
      operationId: "api_users_read"
      parameters:
      - name: "id"
        in: "path"
        description: "User ID"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/BaseUser"
    delete:
      tags:
      - "Users"
      summary: "Delete user"
      description: "Delete a specific Label Studio user."
      operationId: "api_users_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "User ID"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "204":
          description: ""
    patch:
      tags:
      - "Users"
      summary: "Update user details"
      description: "\nUpdate details for a specific user, such as their name or contact\
        \ information, in Label Studio.\n"
      operationId: "api_users_partial_update"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/BaseUser"
        x-exportParamName: "Data"
      - name: "id"
        in: "path"
        description: "User ID"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/BaseUser"
  /api/webhooks/:
    get:
      tags:
      - "Webhooks"
      summary: "List all webhooks"
      description: "List all webhooks set up for your organization."
      operationId: "api_webhooks_list"
      parameters:
      - name: "project"
        in: "query"
        description: "Project ID"
        required: false
        type: "string"
        x-exportParamName: "Project"
        x-optionalDataType: "String"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Webhook"
    post:
      tags:
      - "Webhooks"
      summary: "Create a webhook"
      description: "Create a webhook for your organization."
      operationId: "api_webhooks_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/Webhook"
        x-exportParamName: "Data"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/Webhook"
  /api/webhooks/info/:
    get:
      tags:
      - "Webhooks"
      summary: "Get all webhook actions"
      description: "Get descriptions of all available webhook actions to set up webhooks."
      operationId: "api_webhooks_info_list"
      parameters:
      - name: "organization-only"
        in: "query"
        description: "organization-only or not"
        required: false
        type: "boolean"
        x-exportParamName: "OrganizationOnly"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Object with description data."
  /api/webhooks/{id}/:
    get:
      tags:
      - "Webhooks"
      summary: "Get webhook info"
      description: ""
      operationId: "api_webhooks_read"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this webhook."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Webhook"
    put:
      tags:
      - "Webhooks"
      summary: "Save webhook info"
      description: ""
      operationId: "api_webhooks_update"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this webhook."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/WebhookSerializerForUpdate"
        x-exportParamName: "Data"
      - name: "url"
        in: "query"
        description: "URL of webhook"
        required: true
        type: "string"
        maxLength: 2048
        minLength: 1
        format: "uri"
        x-exportParamName: "Url"
      - name: "send_payload"
        in: "query"
        description: "If value is False send only action"
        required: false
        type: "boolean"
        x-exportParamName: "SendPayload"
        x-optionalDataType: "Bool"
      - name: "send_for_all_actions"
        in: "query"
        description: "If value is False - used only for actions from WebhookAction"
        required: false
        type: "boolean"
        x-exportParamName: "SendForAllActions"
        x-optionalDataType: "Bool"
      - name: "headers"
        in: "query"
        description: "Key Value Json of headers"
        required: false
        type: "string"
        x-exportParamName: "Headers"
        x-optionalDataType: "String"
      - name: "is_active"
        in: "query"
        description: "If value is False the webhook is disabled"
        required: false
        type: "boolean"
        x-exportParamName: "IsActive"
        x-optionalDataType: "Bool"
      - name: "actions"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "PROJECT_CREATED"
          - "PROJECT_UPDATED"
          - "PROJECT_DELETED"
          - "TASKS_CREATED"
          - "TASKS_DELETED"
          - "ANNOTATION_CREATED"
          - "ANNOTATIONS_CREATED"
          - "ANNOTATION_UPDATED"
          - "ANNOTATIONS_DELETED"
          - "LABEL_LINK_CREATED"
          - "LABEL_LINK_UPDATED"
          - "LABEL_LINK_DELETED"
        collectionFormat: "multi"
        default: "[]"
        x-exportParamName: "Actions"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/WebhookSerializerForUpdate"
    delete:
      tags:
      - "Webhooks"
      summary: "Delete webhook info"
      description: ""
      operationId: "api_webhooks_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this webhook."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "204":
          description: ""
    patch:
      tags:
      - "Webhooks"
      summary: "Update webhook info"
      description: ""
      operationId: "api_webhooks_partial_update"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique integer value identifying this webhook."
        required: true
        type: "integer"
        x-exportParamName: "Id"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/WebhookSerializerForUpdate"
        x-exportParamName: "Data"
      - name: "url"
        in: "query"
        description: "URL of webhook"
        required: true
        type: "string"
        maxLength: 2048
        minLength: 1
        format: "uri"
        x-exportParamName: "Url"
      - name: "send_payload"
        in: "query"
        description: "If value is False send only action"
        required: false
        type: "boolean"
        x-exportParamName: "SendPayload"
        x-optionalDataType: "Bool"
      - name: "send_for_all_actions"
        in: "query"
        description: "If value is False - used only for actions from WebhookAction"
        required: false
        type: "boolean"
        x-exportParamName: "SendForAllActions"
        x-optionalDataType: "Bool"
      - name: "headers"
        in: "query"
        description: "Key Value Json of headers"
        required: false
        type: "string"
        x-exportParamName: "Headers"
        x-optionalDataType: "String"
      - name: "is_active"
        in: "query"
        description: "If value is False the webhook is disabled"
        required: false
        type: "boolean"
        x-exportParamName: "IsActive"
        x-optionalDataType: "Bool"
      - name: "actions"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "PROJECT_CREATED"
          - "PROJECT_UPDATED"
          - "PROJECT_DELETED"
          - "TASKS_CREATED"
          - "TASKS_DELETED"
          - "ANNOTATION_CREATED"
          - "ANNOTATIONS_CREATED"
          - "ANNOTATION_UPDATED"
          - "ANNOTATIONS_DELETED"
          - "LABEL_LINK_CREATED"
          - "LABEL_LINK_UPDATED"
          - "LABEL_LINK_DELETED"
        collectionFormat: "multi"
        default: "[]"
        x-exportParamName: "Actions"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/WebhookSerializerForUpdate"
securityDefinitions:
  Token:
    description: "The token (or API key) must be passed as a request header. You can\
      \ find your user token on the User Account page in Label Studio. Example: <br><pre><code\
      \ class=\"language-bash\">curl https://label-studio-host/api/projects -H \"\
      Authorization: Token [your-token]\"</code></pre>"
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  Annotation:
    type: "object"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      created_username:
        type: "string"
        description: "Username string"
        title: "Created username"
        readOnly: true
      created_ago:
        type: "string"
        description: "Time delta from creation time"
        title: "Created ago"
        readOnly: true
        minLength: 1
        default: ""
      completed_by:
        type: "integer"
        title: "Completed by"
      unique_id:
        type: "string"
        title: "Unique id"
        minLength: 1
      result:
        type: "object"
        description: "The main value of annotator work - labeling result in JSON format"
        title: "Result"
        properties: {}
        x-nullable: true
      was_cancelled:
        type: "boolean"
        description: "User skipped the task"
        title: "Was cancelled"
      ground_truth:
        type: "boolean"
        description: "This annotation is a Ground Truth (ground_truth)"
        title: "Ground_truth"
      created_at:
        type: "string"
        format: "date-time"
        description: "Creation time"
        title: "Created at"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        description: "Last updated time"
        title: "Updated at"
        readOnly: true
      draft_created_at:
        type: "string"
        format: "date-time"
        description: "Draft creation time"
        title: "Draft created at"
        x-nullable: true
      lead_time:
        type: "number"
        description: "How much time it took to annotate the task"
        title: "Lead time"
        x-nullable: true
      import_id:
        type: "integer"
        description: "Original annotation ID that was at the import step or NULL if\
          \ this annotation wasn't imported"
        title: "Import id"
        x-nullable: true
      last_action:
        type: "string"
        description: "Action which was performed in the last annotation history item"
        title: "Last action"
        enum:
        - "prediction"
        - "propagated_annotation"
        - "imported"
        - "submitted"
        - "updated"
        - "skipped"
        - "accepted"
        - "rejected"
        - "fixed_and_accepted"
        - "deleted_review"
        x-nullable: true
      task:
        type: "integer"
        description: "Corresponding task for this annotation"
        title: "Task"
        x-nullable: true
      project:
        type: "integer"
        description: "Project ID for this annotation"
        title: "Project"
        x-nullable: true
      updated_by:
        type: "integer"
        description: "Last user who updated this annotation"
        title: "Updated by"
        x-nullable: true
      parent_prediction:
        type: "integer"
        description: "Points to the prediction from which this annotation was created"
        title: "Parent prediction"
        x-nullable: true
      parent_annotation:
        type: "integer"
        description: "Points to the parent annotation from which this annotation was\
          \ created"
        title: "Parent annotation"
        x-nullable: true
      last_created_by:
        type: "integer"
        description: "User who created the last annotation history item"
        title: "Last created by"
        x-nullable: true
    example:
      last_created_by: 2
      parent_annotation: 3
      created_ago: "created_ago"
      unique_id: "unique_id"
      was_cancelled: true
      draft_created_at: "2000-01-23T04:56:07.000+00:00"
      ground_truth: true
      import_id: 5
      created_at: "2000-01-23T04:56:07.000+00:00"
      project: 2
      parent_prediction: 9
      last_action: "prediction"
      result: "{}"
      created_username: "created_username"
      task: 5
      updated_at: "2000-01-23T04:56:07.000+00:00"
      lead_time: 1.46581298050294517310021547018550336360931396484375
      updated_by: 7
      id: 0
      completed_by: 6
  BaseUser:
    type: "object"
    required:
    - "username"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      first_name:
        type: "string"
        title: "First name"
        maxLength: 256
      last_name:
        type: "string"
        title: "Last name"
        maxLength: 256
      username:
        type: "string"
        title: "Username"
        minLength: 1
        maxLength: 256
      email:
        type: "string"
        format: "email"
        title: "Email address"
        maxLength: 254
      last_activity:
        type: "string"
        format: "date-time"
        title: "Last activity"
        readOnly: true
      avatar:
        type: "string"
        title: "Avatar"
        readOnly: true
      initials:
        type: "string"
        title: "Initials"
        readOnly: true
      phone:
        type: "string"
        title: "Phone"
        maxLength: 256
      active_organization:
        type: "integer"
        title: "Active organization"
        x-nullable: true
      allow_newsletters:
        type: "boolean"
        description: "Allow sending newsletters to user"
        title: "Allow newsletters"
        x-nullable: true
    example:
      active_organization: 6
      last_activity: "2000-01-23T04:56:07.000+00:00"
      phone: "phone"
      initials: "initials"
      last_name: "last_name"
      allow_newsletters: true
      id: 0
      avatar: "avatar"
      first_name: "first_name"
      email: "email"
      username: "username"
  Filter:
    type: "object"
    required:
    - "column"
    - "operator"
    - "type"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      index:
        type: "integer"
        description: "To keep filter order"
        title: "Index"
      column:
        type: "string"
        description: "Field name"
        title: "Column"
        minLength: 1
        maxLength: 1024
      type:
        type: "string"
        description: "Field type"
        title: "Type"
        minLength: 1
        maxLength: 1024
      operator:
        type: "string"
        description: "Filter operator"
        title: "Operator"
        minLength: 1
        maxLength: 1024
      value:
        type: "object"
        description: "Filter value"
        title: "Value"
        properties: {}
        x-nullable: true
    example:
      column: "column"
      index: 5
      id: 1
      type: "type"
      value: "{}"
      operator: "operator"
  FilterGroup:
    type: "object"
    required:
    - "conjunction"
    - "filters"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      filters:
        type: "array"
        items:
          $ref: "#/definitions/Filter"
      conjunction:
        type: "string"
        description: "Type of conjunction"
        title: "Conjunction"
        minLength: 1
        maxLength: 1024
    example:
      conjunction: "conjunction"
      id: 6
      filters:
      - column: "column"
        index: 5
        id: 1
        type: "type"
        value: "{}"
        operator: "operator"
      - column: "column"
        index: 5
        id: 1
        type: "type"
        value: "{}"
        operator: "operator"
  View:
    type: "object"
    required:
    - "project"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      filter_group:
        $ref: "#/definitions/FilterGroup"
      data:
        type: "object"
        description: "Custom view data"
        title: "Data"
        properties: {}
        x-nullable: true
      ordering:
        type: "object"
        description: "Ordering parameters"
        title: "Ordering"
        properties: {}
        x-nullable: true
      selected_items:
        type: "object"
        description: "Selected items"
        title: "Selected items"
        properties: {}
        x-nullable: true
      user:
        type: "integer"
        description: "User who made this view"
        title: "User"
        x-nullable: true
      project:
        type: "integer"
        description: "Project ID"
        title: "Project"
    example:
      data: "{}"
      selected_items: "{}"
      filter_group:
        conjunction: "conjunction"
        id: 6
        filters:
        - column: "column"
          index: 5
          id: 1
          type: "type"
          value: "{}"
          operator: "operator"
        - column: "column"
          index: 5
          id: 1
          type: "type"
          value: "{}"
          operator: "operator"
      ordering: "{}"
      project: 2
      id: 0
      user: 5
  ViewReset:
    type: "object"
    required:
    - "project"
    properties:
      project:
        type: "integer"
        title: "Project"
    example:
      project: 0
  FileUpload:
    type: "object"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      file:
        type: "string"
        title: "File"
        readOnly: true
    example:
      file: "file"
      id: 0
  OrganizationInvite:
    type: "object"
    properties:
      token:
        type: "string"
        title: "Token"
        minLength: 1
      invite_url:
        type: "string"
        title: "Invite url"
        minLength: 1
    example:
      invite_url: "invite_url"
      token: "token"
  LabelLink:
    type: "object"
    required:
    - "from_name"
    - "label"
    - "project"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      annotations_count:
        type: "integer"
        title: "Annotations count"
        readOnly: true
      from_name:
        type: "string"
        description: "Tag name"
        title: "Tag name"
        minLength: 1
        maxLength: 2048
      project:
        type: "integer"
        title: "Project"
      label:
        type: "integer"
        title: "Label"
    example:
      project: 5
      id: 6
      label: 5
      from_name: "from_name"
      annotations_count: 1
  Label:
    type: "object"
    required:
    - "created_by"
    - "organization"
    - "title"
    - "value"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      links:
        type: "array"
        readOnly: true
        uniqueItems: true
        items:
          type: "integer"
      created_at:
        type: "string"
        format: "date-time"
        description: "Time of label creation"
        title: "Created at"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        description: "Time of label modification"
        title: "Updated at"
        readOnly: true
      value:
        type: "object"
        description: "Label value"
        title: "Value"
        properties: {}
      title:
        type: "string"
        description: "Label title"
        title: "Title"
        minLength: 1
        maxLength: 2048
      description:
        type: "string"
        description: "Label description"
        title: "Description"
        x-nullable: true
      approved:
        type: "boolean"
        description: "Status of label"
        title: "Approved"
      created_by:
        type: "integer"
        description: "User who made this label"
        title: "Created by"
      approved_by:
        type: "integer"
        description: "User who approved this label"
        title: "Approved by"
        x-nullable: true
      organization:
        type: "integer"
        title: "Organization"
      projects:
        type: "array"
        readOnly: true
        uniqueItems: true
        items:
          type: "integer"
    example:
      approved: true
      approved_by: 5
      projects:
      - 7
      - 7
      updated_at: "2000-01-23T04:56:07.000+00:00"
      organization: 2
      created_at: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      links:
      - 1
      - 1
      id: 6
      title: "title"
      value: "{}"
      created_by: 5
  LabelCreate:
    type: "object"
    required:
    - "from_name"
    - "project"
    - "title"
    - "value"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      created_by:
        type: "integer"
        title: "Created by"
      organization:
        type: "integer"
        title: "Organization"
      project:
        type: "integer"
        title: "Project"
      from_name:
        type: "string"
        title: "From name"
        minLength: 1
      created_at:
        type: "string"
        format: "date-time"
        description: "Time of label creation"
        title: "Created at"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        description: "Time of label modification"
        title: "Updated at"
        readOnly: true
      value:
        type: "object"
        description: "Label value"
        title: "Value"
        properties: {}
      title:
        type: "string"
        description: "Label title"
        title: "Title"
        minLength: 1
        maxLength: 2048
      description:
        type: "string"
        description: "Label description"
        title: "Description"
        x-nullable: true
      approved:
        type: "boolean"
        description: "Status of label"
        title: "Approved"
      approved_by:
        type: "integer"
        description: "User who approved this label"
        title: "Approved by"
        x-nullable: true
      projects:
        type: "array"
        readOnly: true
        uniqueItems: true
        items:
          type: "integer"
    example:
      projects:
      - 2
      - 2
      project: 5
      created_at: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      from_name: "from_name"
      title: "title"
      created_by: 6
      approved: true
      approved_by: 5
      updated_at: "2000-01-23T04:56:07.000+00:00"
      organization: 1
      id: 0
      value: "{}"
  MLBackend:
    type: "object"
    required:
    - "project"
    - "url"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      state:
        type: "string"
        title: "State"
        enum:
        - "CO"
        - "DI"
        - "ER"
        - "TR"
        - "PR"
      is_interactive:
        type: "boolean"
        description: "Used to interactively annotate tasks. If true, model returns\
          \ one list with results"
        title: "Is_interactive"
      url:
        type: "string"
        description: "URL for the machine learning model server"
        title: "Url"
        minLength: 1
      error_message:
        type: "string"
        description: "Error message in error state"
        title: "Error_message"
        x-nullable: true
      title:
        type: "string"
        description: "Name of the machine learning backend"
        title: "Title"
        x-nullable: true
      description:
        type: "string"
        description: "Description for the machine learning backend"
        title: "Description"
        x-nullable: true
      model_version:
        type: "string"
        description: "Current model version associated with this machine learning\
          \ backend"
        title: "Model version"
        x-nullable: true
      timeout:
        type: "number"
        description: "Response model timeout"
        title: "Timeout"
      created_at:
        type: "string"
        format: "date-time"
        title: "Created at"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        title: "Updated at"
        readOnly: true
      auto_update:
        type: "boolean"
        description: "If false, model version is set by the user, if true - getting\
          \ latest version from backend."
        title: "Auto_update"
      project:
        type: "integer"
        title: "Project"
    example:
      error_message: "error_message"
      model_version: "model_version"
      is_interactive: true
      description: "description"
      created_at: "2000-01-23T04:56:07.000+00:00"
      project: 1
      title: "title"
      url: "url"
      timeout: 6.02745618307040320615897144307382404804229736328125
      updated_at: "2000-01-23T04:56:07.000+00:00"
      auto_update: true
      id: 0
      state: "CO"
  MLInteractiveAnnotatingRequest:
    type: "object"
    required:
    - "task"
    properties:
      task:
        type: "integer"
        description: "ID of task to annotate"
        title: "Task"
      context:
        type: "object"
        description: "Context for ML model"
        title: "Context"
        properties: {}
        x-nullable: true
  OrganizationId:
    type: "object"
    required:
    - "title"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      title:
        type: "string"
        title: "Organization title"
        minLength: 1
        maxLength: 1000
      contact_info:
        type: "string"
        format: "email"
        title: "Contact info"
        maxLength: 254
        x-nullable: true
    example:
      id: 0
      contact_info: "contact_info"
      title: "title"
  Organization:
    type: "object"
    required:
    - "title"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      title:
        type: "string"
        title: "Organization title"
        minLength: 1
        maxLength: 1000
      token:
        type: "string"
        title: "Token"
        maxLength: 256
        x-nullable: true
      created_at:
        type: "string"
        format: "date-time"
        title: "Created at"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        title: "Updated at"
        readOnly: true
      contact_info:
        type: "string"
        format: "email"
        title: "Contact info"
        maxLength: 254
        x-nullable: true
      created_by:
        type: "integer"
        title: "Created_by"
        x-nullable: true
      users:
        type: "array"
        readOnly: true
        uniqueItems: true
        items:
          type: "integer"
    example:
      updated_at: "2000-01-23T04:56:07.000+00:00"
      created_at: "2000-01-23T04:56:07.000+00:00"
      id: 0
      contact_info: "contact_info"
      title: "title"
      created_by: 6
      users:
      - 1
      - 1
      token: "token"
  UserSerializerWithProjects:
    type: "object"
    required:
    - "username"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      first_name:
        type: "string"
        title: "First name"
        maxLength: 256
      last_name:
        type: "string"
        title: "Last name"
        maxLength: 256
      username:
        type: "string"
        title: "Username"
        minLength: 1
        maxLength: 256
      email:
        type: "string"
        format: "email"
        title: "Email address"
        maxLength: 254
      last_activity:
        type: "string"
        format: "date-time"
        title: "Last activity"
        readOnly: true
      avatar:
        type: "string"
        title: "Avatar"
        readOnly: true
      initials:
        type: "string"
        title: "Initials"
        readOnly: true
      phone:
        type: "string"
        title: "Phone"
        maxLength: 256
      active_organization:
        type: "integer"
        title: "Active organization"
        x-nullable: true
      allow_newsletters:
        type: "boolean"
        description: "Allow sending newsletters to user"
        title: "Allow newsletters"
        x-nullable: true
      created_projects:
        type: "string"
        title: "Created projects"
        readOnly: true
      contributed_to_projects:
        type: "string"
        title: "Contributed to projects"
        readOnly: true
    example:
      active_organization: 5
      initials: "initials"
      contributed_to_projects: "contributed_to_projects"
      last_name: "last_name"
      avatar: "avatar"
      last_activity: "2000-01-23T04:56:07.000+00:00"
      phone: "phone"
      allow_newsletters: true
      id: 5
      first_name: "first_name"
      created_projects: "created_projects"
      email: "email"
      username: "username"
  OrganizationMemberUser:
    type: "object"
    required:
    - "organization"
    - "user"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      organization:
        type: "integer"
        description: "Organization ID"
        title: "Organization"
      user:
        $ref: "#/definitions/UserSerializerWithProjects"
    example:
      organization: 1
      id: 6
      user:
        active_organization: 5
        initials: "initials"
        contributed_to_projects: "contributed_to_projects"
        last_name: "last_name"
        avatar: "avatar"
        last_activity: "2000-01-23T04:56:07.000+00:00"
        phone: "phone"
        allow_newsletters: true
        id: 5
        first_name: "first_name"
        created_projects: "created_projects"
        email: "email"
        username: "username"
  Prediction:
    type: "object"
    required:
    - "task"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      model_version:
        type: "string"
        title: "Model version"
      created_ago:
        type: "string"
        description: "Delta time from creation time"
        title: "Created ago"
        readOnly: true
        minLength: 1
        default: ""
      result:
        type: "object"
        description: "Prediction result"
        title: "Result"
        properties: {}
        x-nullable: true
      score:
        type: "number"
        description: "Prediction score"
        title: "Score"
        x-nullable: true
      cluster:
        type: "integer"
        description: "Cluster for the current prediction"
        title: "Cluster"
        x-nullable: true
      neighbors:
        type: "object"
        description: "Array of task IDs of the closest neighbors"
        title: "Neighbors"
        properties: {}
        x-nullable: true
      mislabeling:
        type: "number"
        description: "Related task mislabeling score"
        title: "Mislabeling"
      created_at:
        type: "string"
        format: "date-time"
        title: "Created at"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        title: "Updated at"
        readOnly: true
      task:
        type: "integer"
        title: "Task"
      project:
        type: "integer"
        title: "Project"
        x-nullable: true
    example:
      result: "{}"
      mislabeling: 5.962133916683182377482808078639209270477294921875
      model_version: "model_version"
      score: 6.02745618307040320615897144307382404804229736328125
      cluster: 1
      created_ago: "created_ago"
      task: 5
      updated_at: "2000-01-23T04:56:07.000+00:00"
      neighbors: "{}"
      created_at: "2000-01-23T04:56:07.000+00:00"
      project: 2
      id: 0
  UserSimple:
    type: "object"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      first_name:
        type: "string"
        title: "First name"
        maxLength: 256
      last_name:
        type: "string"
        title: "Last name"
        maxLength: 256
      email:
        type: "string"
        format: "email"
        title: "Email address"
        maxLength: 254
      avatar:
        type: "string"
        title: "Avatar"
        readOnly: true
    description: "Project owner"
    example:
      last_name: "last_name"
      id: 5
      avatar: "avatar"
      first_name: "first_name"
      email: "email"
  Project:
    type: "object"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      title:
        type: "string"
        description: "Project name. Must be between 3 and 50 characters long."
        title: "Title"
        minLength: 3
        maxLength: 50
        x-nullable: true
      description:
        type: "string"
        description: "Project description"
        title: "Description"
        x-nullable: true
      label_config:
        type: "string"
        description: "Label config in XML format. See more about it in documentation"
        title: "Label config"
        x-nullable: true
      expert_instruction:
        type: "string"
        description: "Labeling instructions in HTML format"
        title: "Expert instruction"
        x-nullable: true
      show_instruction:
        type: "boolean"
        description: "Show instructions to the annotator before they start"
        title: "Show instruction"
      show_skip_button:
        type: "boolean"
        description: "Show a skip button in interface and allow annotators to skip\
          \ the task"
        title: "Show skip button"
      enable_empty_annotation:
        type: "boolean"
        description: "Allow annotators to submit empty annotations"
        title: "Enable empty annotation"
      show_annotation_history:
        type: "boolean"
        description: "Show annotation history to annotator"
        title: "Show annotation history"
      organization:
        type: "integer"
        title: "Organization"
        x-nullable: true
      color:
        type: "string"
        title: "Color"
        maxLength: 16
        x-nullable: true
      maximum_annotations:
        type: "integer"
        description: "Maximum number of annotations for one task. If the number of\
          \ annotations per task is equal or greater to this value, the task is completed\
          \ (is_labeled=True)"
        title: "Maximum annotation number"
      is_published:
        type: "boolean"
        description: "Whether or not the project is published to annotators"
        title: "Published"
      model_version:
        type: "string"
        description: "Machine learning model version"
        title: "Model version"
        x-nullable: true
      is_draft:
        type: "boolean"
        description: "Whether or not the project is in the middle of being created"
        title: "Is draft"
      created_by:
        $ref: "#/definitions/UserSimple"
      created_at:
        type: "string"
        format: "date-time"
        title: "Created at"
        readOnly: true
      min_annotations_to_start_training:
        type: "integer"
        description: "Minimum number of completed tasks after which model training\
          \ is started"
        title: "Min_annotations_to_start_training"
      start_training_on_annotation_update:
        type: "string"
        description: "Start model training after any annotations are submitted or\
          \ updated"
        title: "Start training on annotation update"
        readOnly: true
      show_collab_predictions:
        type: "boolean"
        description: "If set, the annotator can view model predictions"
        title: "Show predictions to annotator"
      num_tasks_with_annotations:
        type: "integer"
        description: "Tasks with annotations count"
        title: "Num tasks with annotations"
        readOnly: true
      task_number:
        type: "integer"
        description: "Total task number in project"
        title: "Task number"
        readOnly: true
      useful_annotation_number:
        type: "integer"
        description: "Useful annotation number in project not including skipped_annotations_number\
          \ and ground_truth_number. Total annotations = annotation_number + skipped_annotations_number\
          \ + ground_truth_number"
        title: "Useful annotation number"
        readOnly: true
      ground_truth_number:
        type: "integer"
        description: "Honeypot annotation number in project"
        title: "Ground truth number"
        readOnly: true
      skipped_annotations_number:
        type: "integer"
        description: "Skipped by collaborators annotation number in project"
        title: "Skipped annotations number"
        readOnly: true
      total_annotations_number:
        type: "integer"
        description: "Total annotations number in project including skipped_annotations_number\
          \ and ground_truth_number."
        title: "Total annotations number"
        readOnly: true
      total_predictions_number:
        type: "integer"
        description: "Total predictions number in project including skipped_annotations_number,\
          \ ground_truth_number, and useful_annotation_number."
        title: "Total predictions number"
        readOnly: true
      sampling:
        type: "string"
        title: "Sampling"
        enum:
        - "Sequential sampling"
        - "Uniform sampling"
        - "Uncertainty sampling"
        x-nullable: true
      show_ground_truth_first:
        type: "boolean"
        title: "Show ground truth first"
      show_overlap_first:
        type: "boolean"
        title: "Show overlap first"
      overlap_cohort_percentage:
        type: "integer"
        title: "Overlap_cohort_percentage"
      task_data_login:
        type: "string"
        description: "Task data credentials: login"
        title: "Task_data_login"
        maxLength: 256
        x-nullable: true
      task_data_password:
        type: "string"
        description: "Task data credentials: password"
        title: "Task_data_password"
        maxLength: 256
        x-nullable: true
      control_weights:
        type: "object"
        description: "Dict of weights for each control tag in metric calculation.\
          \ Each control tag (e.g. label or choice) will have it's own key in control\
          \ weight dict with weight for each label and overall weight.For example,\
          \ if bounding box annotation with control tag named my_bbox should be included\
          \ with 0.33 weight in agreement calculation, and the first label Car should\
          \ be twice more important than Airplaine, then you have to need the specify:\
          \ {'my_bbox': {'type': 'RectangleLabels', 'labels': {'Car': 1.0, 'Airplaine':\
          \ 0.5}, 'overall': 0.33}"
        title: "Control weights"
        properties: {}
        x-nullable: true
      parsed_label_config:
        type: "string"
        description: "JSON-formatted labeling configuration"
        title: "Parsed label config"
        readOnly: true
      evaluate_predictions_automatically:
        type: "boolean"
        description: "Retrieve and display predictions when loading a task"
        title: "Evaluate predictions automatically"
      config_has_control_tags:
        type: "string"
        description: "Flag to detect is project ready for labeling"
        title: "Config has control tags"
        readOnly: true
      skip_queue:
        type: "string"
        title: "Skip queue"
        enum:
        - "REQUEUE_FOR_ME"
        - "REQUEUE_FOR_OTHERS"
        - "IGNORE_SKIPPED"
        x-nullable: true
      reveal_preannotations_interactively:
        type: "boolean"
        description: "Reveal pre-annotations interactively"
        title: "Reveal_preannotations_interactively"
      pinned_at:
        type: "string"
        format: "date-time"
        description: "Pinned date and time"
        title: "Pinned at"
        x-nullable: true
      finished_task_number:
        type: "integer"
        description: "Finished tasks"
        title: "Finished task number"
        readOnly: true
      queue_total:
        type: "string"
        title: "Queue total"
        readOnly: true
      queue_done:
        type: "string"
        title: "Queue done"
        readOnly: true
    example:
      model_version: "model_version"
      show_collab_predictions: true
      color: "color"
      is_published: true
      label_config: "label_config"
      description: "description"
      created_at: "2000-01-23T04:56:07.000+00:00"
      title: "title"
      show_skip_button: true
      is_draft: true
      evaluate_predictions_automatically: true
      pinned_at: "2000-01-23T04:56:07.000+00:00"
      min_annotations_to_start_training: 2
      ground_truth_number: 2
      show_ground_truth_first: true
      task_number: 9
      reveal_preannotations_interactively: true
      id: 6
      skipped_annotations_number: 4
      task_data_login: "task_data_login"
      control_weights: "{}"
      expert_instruction: "expert_instruction"
      finished_task_number: 1
      start_training_on_annotation_update: "start_training_on_annotation_update"
      total_predictions_number: 1
      queue_total: "queue_total"
      num_tasks_with_annotations: 7
      total_annotations_number: 7
      sampling: "Sequential sampling"
      skip_queue: "REQUEUE_FOR_ME"
      show_instruction: true
      created_by:
        last_name: "last_name"
        id: 5
        avatar: "avatar"
        first_name: "first_name"
        email: "email"
      parsed_label_config: "parsed_label_config"
      show_annotation_history: true
      enable_empty_annotation: true
      queue_done: "queue_done"
      task_data_password: "task_data_password"
      maximum_annotations: 5
      organization: 1
      show_overlap_first: true
      config_has_control_tags: "config_has_control_tags"
      overlap_cohort_percentage: 1
      useful_annotation_number: 3
  ProjectLabelConfig:
    type: "object"
    required:
    - "label_config"
    properties:
      label_config:
        type: "string"
        description: "Label config in XML format. See more about it in documentation"
        title: "Label config"
        minLength: 1
    example:
      label_config: "label_config"
  ConvertedFormat:
    type: "object"
    required:
    - "export_type"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      status:
        type: "string"
        title: "Status"
        enum:
        - "created"
        - "in_progress"
        - "failed"
        - "completed"
      export_type:
        type: "string"
        title: "Export type"
        minLength: 1
        maxLength: 64
      traceback:
        type: "string"
        description: "Traceback report in case of errors"
        title: "Traceback"
        x-nullable: true
    example:
      export_type: "export_type"
      id: 6
      traceback: "traceback"
      status: "created"
  Export:
    type: "object"
    properties:
      title:
        type: "string"
        title: "Title"
        maxLength: 2048
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      created_by:
        $ref: "#/definitions/UserSimple"
      created_at:
        type: "string"
        format: "date-time"
        description: "Creation time"
        title: "Created at"
        readOnly: true
      finished_at:
        type: "string"
        format: "date-time"
        description: "Complete or fail time"
        title: "Finished at"
        x-nullable: true
      status:
        type: "string"
        title: "Export status"
        enum:
        - "created"
        - "in_progress"
        - "failed"
        - "completed"
      md5:
        type: "string"
        title: "Md5 of file"
        minLength: 1
        maxLength: 128
      counters:
        type: "object"
        title: "Exporting meta data"
        properties: {}
      converted_formats:
        type: "array"
        items:
          $ref: "#/definitions/ConvertedFormat"
    example:
      finished_at: "2000-01-23T04:56:07.000+00:00"
      counters: "{}"
      created_at: "2000-01-23T04:56:07.000+00:00"
      id: 0
      converted_formats:
      - export_type: "export_type"
        id: 6
        traceback: "traceback"
        status: "created"
      - export_type: "export_type"
        id: 6
        traceback: "traceback"
        status: "created"
      title: "title"
      created_by:
        last_name: "last_name"
        id: 5
        avatar: "avatar"
        first_name: "first_name"
        email: "email"
      status: "created"
      md5: "md5"
  TaskFilterOptions:
    type: "object"
    properties:
      view:
        type: "integer"
        description: "Apply filters from the view ID (a tab from the Data Manager)"
        title: "View"
      skipped:
        type: "string"
        description: "`only` - include all tasks with skipped annotations<br>`exclude`\
          \ - exclude all tasks with skipped annotations"
        title: "Skipped"
        enum:
        - "only"
        - "exclude"
        x-nullable: true
      finished:
        type: "string"
        description: "`only` - include all finished tasks (is_labeled = true)<br>`exclude`\
          \ - exclude all finished tasks"
        title: "Finished"
        enum:
        - "only"
        - "exclude"
        x-nullable: true
      annotated:
        type: "string"
        description: "`only` - include all tasks with at least one not skipped annotation<br>`exclude`\
          \ - exclude all tasks with at least one not skipped annotation"
        title: "Annotated"
        enum:
        - "only"
        - "exclude"
        x-nullable: true
      only_with_annotations:
        type: "boolean"
        title: "Only with annotations"
        default: false
    example:
      view: 6
      only_with_annotations: false
      finished: "only"
      skipped: "only"
      annotated: "only"
  AnnotationFilterOptions:
    type: "object"
    properties:
      usual:
        type: "boolean"
        description: "Include not skipped and not ground truth annotations"
        title: "Usual"
        default: true
        x-nullable: true
      ground_truth:
        type: "boolean"
        description: "Include ground truth annotations"
        title: "Ground truth"
        x-nullable: true
      skipped:
        type: "boolean"
        description: "Include skipped annotations"
        title: "Skipped"
        x-nullable: true
    example:
      usual: true
      ground_truth: true
      skipped: true
  SerializationOption:
    type: "object"
    properties:
      only_id:
        type: "boolean"
        description: "Include a full json body or IDs only"
        title: "Only id"
        default: false
    description: "JSON dict with parameters"
    example:
      only_id: false
  SerializationOptions:
    type: "object"
    properties:
      drafts:
        $ref: "#/definitions/SerializationOption"
      predictions:
        $ref: "#/definitions/SerializationOption"
      annotations__completed_by:
        $ref: "#/definitions/SerializationOption"
      interpolate_key_frames:
        type: "boolean"
        description: "Interpolate video key frames"
        title: "Interpolate key frames"
        default: false
    example:
      annotations__completed_by:
        only_id: false
      drafts:
        only_id: false
      interpolate_key_frames: false
      predictions:
        only_id: false
  ExportCreate:
    type: "object"
    properties:
      title:
        type: "string"
        title: "Title"
        maxLength: 2048
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      created_by:
        $ref: "#/definitions/UserSimple"
      created_at:
        type: "string"
        format: "date-time"
        description: "Creation time"
        title: "Created at"
        readOnly: true
      finished_at:
        type: "string"
        format: "date-time"
        description: "Complete or fail time"
        title: "Finished at"
        x-nullable: true
      status:
        type: "string"
        title: "Export status"
        enum:
        - "created"
        - "in_progress"
        - "failed"
        - "completed"
      md5:
        type: "string"
        title: "Md5 of file"
        minLength: 1
        maxLength: 128
      counters:
        type: "object"
        title: "Exporting meta data"
        properties: {}
      converted_formats:
        type: "array"
        items:
          $ref: "#/definitions/ConvertedFormat"
      task_filter_options:
        $ref: "#/definitions/TaskFilterOptions"
      annotation_filter_options:
        $ref: "#/definitions/AnnotationFilterOptions"
      serialization_options:
        $ref: "#/definitions/SerializationOptions"
    example:
      finished_at: "2000-01-23T04:56:07.000+00:00"
      counters: "{}"
      task_filter_options:
        view: 6
        only_with_annotations: false
        finished: "only"
        skipped: "only"
        annotated: "only"
      created_at: "2000-01-23T04:56:07.000+00:00"
      id: 0
      converted_formats:
      - export_type: "export_type"
        id: 6
        traceback: "traceback"
        status: "created"
      - export_type: "export_type"
        id: 6
        traceback: "traceback"
        status: "created"
      serialization_options:
        annotations__completed_by:
          only_id: false
        drafts:
          only_id: false
        interpolate_key_frames: false
        predictions:
          only_id: false
      title: "title"
      created_by:
        last_name: "last_name"
        id: 5
        avatar: "avatar"
        first_name: "first_name"
        email: "email"
      status: "created"
      md5: "md5"
      annotation_filter_options:
        usual: true
        ground_truth: true
        skipped: true
  ExportConvert:
    type: "object"
    required:
    - "export_type"
    properties:
      export_type:
        type: "string"
        description: "Export file format."
        title: "Export type"
        minLength: 1
    example:
      export_type: "export_type"
  ImportApi:
    type: "object"
    required:
    - "data"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      annotations:
        type: "array"
        items:
          $ref: "#/definitions/Annotation"
      predictions:
        type: "array"
        items:
          $ref: "#/definitions/Prediction"
      data:
        type: "object"
        description: "User imported or uploaded data for a task. Data is formatted\
          \ according to the project label config. You can find examples of data for\
          \ your project on the Import page in the Label Studio Data Manager UI."
        title: "Data"
        properties: {}
      meta:
        type: "object"
        description: "Meta is user imported (uploaded) data and can be useful as input\
          \ for an ML Backend for embeddings, advanced vectors, and other info. It\
          \ is passed to ML during training/predicting steps."
        title: "Meta"
        properties: {}
        x-nullable: true
      created_at:
        type: "string"
        format: "date-time"
        description: "Time a task was created"
        title: "Created at"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        description: "Last time a task was updated"
        title: "Updated at"
        readOnly: true
      overlap:
        type: "integer"
        description: "Number of distinct annotators that processed the current task"
        title: "Overlap"
      inner_id:
        type: "integer"
        description: "Internal task ID in the project, starts with 1"
        title: "Inner id"
        x-nullable: true
      total_annotations:
        type: "integer"
        description: "Number of total annotations for the current task except cancelled\
          \ annotations"
        title: "Total_annotations"
      cancelled_annotations:
        type: "integer"
        description: "Number of total cancelled annotations for the current task"
        title: "Cancelled_annotations"
      total_predictions:
        type: "integer"
        description: "Number of total predictions for the current task"
        title: "Total_predictions"
      comment_count:
        type: "integer"
        description: "Number of comments in the task including all annotations"
        title: "Comment count"
      unresolved_comment_count:
        type: "integer"
        description: "Number of unresolved comments in the task including all annotations"
        title: "Unresolved comment count"
      last_comment_updated_at:
        type: "string"
        format: "date-time"
        description: "When the last comment was updated"
        title: "Last comment updated at"
        x-nullable: true
      updated_by:
        type: "integer"
        description: "Last annotator or reviewer who updated this task"
        title: "Updated by"
        x-nullable: true
      file_upload:
        type: "integer"
        description: "Uploaded file used as data source for this task"
        title: "File upload"
        x-nullable: true
      comment_authors:
        type: "array"
        description: "Users who wrote comments"
        uniqueItems: true
        items:
          type: "integer"
          description: "Users who wrote comments"
    example:
      comment_count: 7
      total_predictions: 2
      data: "{}"
      total_annotations: 5
      last_comment_updated_at: "2000-01-23T04:56:07.000+00:00"
      inner_id: 1
      annotations:
      - last_created_by: 2
        parent_annotation: 3
        created_ago: "created_ago"
        unique_id: "unique_id"
        was_cancelled: true
        draft_created_at: "2000-01-23T04:56:07.000+00:00"
        ground_truth: true
        import_id: 5
        created_at: "2000-01-23T04:56:07.000+00:00"
        project: 2
        parent_prediction: 9
        last_action: "prediction"
        result: "{}"
        created_username: "created_username"
        task: 5
        updated_at: "2000-01-23T04:56:07.000+00:00"
        lead_time: 1.46581298050294517310021547018550336360931396484375
        updated_by: 7
        id: 0
        completed_by: 6
      - last_created_by: 2
        parent_annotation: 3
        created_ago: "created_ago"
        unique_id: "unique_id"
        was_cancelled: true
        draft_created_at: "2000-01-23T04:56:07.000+00:00"
        ground_truth: true
        import_id: 5
        created_at: "2000-01-23T04:56:07.000+00:00"
        project: 2
        parent_prediction: 9
        last_action: "prediction"
        result: "{}"
        created_username: "created_username"
        task: 5
        updated_at: "2000-01-23T04:56:07.000+00:00"
        lead_time: 1.46581298050294517310021547018550336360931396484375
        updated_by: 7
        id: 0
        completed_by: 6
      created_at: "2000-01-23T04:56:07.000+00:00"
      comment_authors:
      - 4
      - 4
      file_upload: 2
      predictions:
      - result: "{}"
        mislabeling: 5.962133916683182377482808078639209270477294921875
        model_version: "model_version"
        score: 6.02745618307040320615897144307382404804229736328125
        cluster: 1
        created_ago: "created_ago"
        task: 5
        updated_at: "2000-01-23T04:56:07.000+00:00"
        neighbors: "{}"
        created_at: "2000-01-23T04:56:07.000+00:00"
        project: 2
        id: 0
      - result: "{}"
        mislabeling: 5.962133916683182377482808078639209270477294921875
        model_version: "model_version"
        score: 6.02745618307040320615897144307382404804229736328125
        cluster: 1
        created_ago: "created_ago"
        task: 5
        updated_at: "2000-01-23T04:56:07.000+00:00"
        neighbors: "{}"
        created_at: "2000-01-23T04:56:07.000+00:00"
        project: 2
        id: 0
      overlap: 6
      updated_at: "2000-01-23T04:56:07.000+00:00"
      meta: "{}"
      cancelled_annotations: 5
      unresolved_comment_count: 9
      updated_by: 3
      id: 0
  ProjectImport:
    type: "object"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      preannotated_from_fields:
        type: "object"
        title: "Preannotated from fields"
        properties: {}
        x-nullable: true
      commit_to_project:
        type: "boolean"
        title: "Commit to project"
      return_task_ids:
        type: "boolean"
        title: "Return task ids"
      status:
        type: "string"
        title: "Status"
        enum:
        - "created"
        - "in_progress"
        - "failed"
        - "completed"
      url:
        type: "string"
        title: "Url"
        maxLength: 2048
        x-nullable: true
      traceback:
        type: "string"
        title: "Traceback"
        x-nullable: true
      error:
        type: "string"
        title: "Error"
        x-nullable: true
      created_at:
        type: "string"
        format: "date-time"
        description: "Creation time"
        title: "Created at"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        description: "Updated time"
        title: "Updated at"
        readOnly: true
      finished_at:
        type: "string"
        format: "date-time"
        description: "Complete or fail time"
        title: "Finished at"
        x-nullable: true
      task_count:
        type: "integer"
        title: "Task count"
      annotation_count:
        type: "integer"
        title: "Annotation count"
      prediction_count:
        type: "integer"
        title: "Prediction count"
      duration:
        type: "integer"
        title: "Duration"
      file_upload_ids:
        type: "object"
        title: "File upload ids"
        properties: {}
      could_be_tasks_list:
        type: "boolean"
        title: "Could be tasks list"
      found_formats:
        type: "object"
        title: "Found formats"
        properties: {}
      data_columns:
        type: "object"
        title: "Data columns"
        properties: {}
      tasks:
        type: "object"
        title: "Tasks"
        properties: {}
        x-nullable: true
      task_ids:
        type: "object"
        title: "Task ids"
        properties: {}
      project:
        type: "integer"
        title: "Project"
        x-nullable: true
    example:
      annotation_count: 1
      commit_to_project: true
      finished_at: "2000-01-23T04:56:07.000+00:00"
      data_columns: "{}"
      found_formats: "{}"
      created_at: "2000-01-23T04:56:07.000+00:00"
      project: 2
      error: "error"
      task_ids: "{}"
      return_task_ids: true
      url: "url"
      task_count: 6
      prediction_count: 5
      duration: 5
      updated_at: "2000-01-23T04:56:07.000+00:00"
      file_upload_ids: "{}"
      id: 0
      preannotated_from_fields: "{}"
      traceback: "traceback"
      could_be_tasks_list: true
      tasks: "{}"
      status: "created"
  ProjectReimport:
    type: "object"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      status:
        type: "string"
        title: "Status"
        enum:
        - "created"
        - "in_progress"
        - "failed"
        - "completed"
      error:
        type: "string"
        title: "Error"
        x-nullable: true
      task_count:
        type: "integer"
        title: "Task count"
      annotation_count:
        type: "integer"
        title: "Annotation count"
      prediction_count:
        type: "integer"
        title: "Prediction count"
      duration:
        type: "integer"
        title: "Duration"
      file_upload_ids:
        type: "object"
        title: "File upload ids"
        properties: {}
      files_as_tasks_list:
        type: "boolean"
        title: "Files as tasks list"
      found_formats:
        type: "object"
        title: "Found formats"
        properties: {}
      data_columns:
        type: "object"
        title: "Data columns"
        properties: {}
      traceback:
        type: "string"
        title: "Traceback"
        x-nullable: true
      project:
        type: "integer"
        title: "Project"
        x-nullable: true
    example:
      annotation_count: 1
      data_columns: "{}"
      found_formats: "{}"
      project: 2
      error: "error"
      task_count: 6
      prediction_count: 5
      duration: 5
      files_as_tasks_list: true
      file_upload_ids: "{}"
      id: 0
      traceback: "traceback"
      status: "created"
  AzureBlobImportStorage:
    type: "object"
    required:
    - "project"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      type:
        type: "string"
        title: "Type"
        readOnly: true
        default: "azure"
      synchronizable:
        type: "boolean"
        title: "Synchronizable"
        default: true
      presign:
        type: "boolean"
        title: "Presign"
        default: true
      container:
        type: "string"
        description: "Azure blob container"
        title: "Container"
        x-nullable: true
      prefix:
        type: "string"
        description: "Azure blob prefix name"
        title: "Prefix"
        x-nullable: true
      regex_filter:
        type: "string"
        description: "Cloud storage regex for filtering objects"
        title: "Regex_filter"
        x-nullable: true
      use_blob_urls:
        type: "boolean"
        description: "Interpret objects as BLOBs and generate URLs"
        title: "Use_blob_urls"
      account_name:
        type: "string"
        description: "Azure Blob account name"
        title: "Account_name"
        x-nullable: true
      account_key:
        type: "string"
        description: "Azure Blob account key"
        title: "Account_key"
        x-nullable: true
      last_sync:
        type: "string"
        format: "date-time"
        description: "Last sync finished time"
        title: "Last sync"
        x-nullable: true
      last_sync_count:
        type: "integer"
        description: "Count of tasks synced last time"
        title: "Last sync count"
        x-nullable: true
      last_sync_job:
        type: "string"
        description: "Last sync job ID"
        title: "Last_sync_job"
        maxLength: 256
        x-nullable: true
      status:
        type: "string"
        title: "Status"
        enum:
        - "initialized"
        - "queued"
        - "in_progress"
        - "failed"
        - "completed"
      traceback:
        type: "string"
        description: "Traceback report for the last failed sync"
        title: "Traceback"
        x-nullable: true
      meta:
        type: "object"
        description: "Meta and debug information about storage processes"
        title: "Meta"
        properties: {}
        x-nullable: true
      title:
        type: "string"
        description: "Cloud storage title"
        title: "Title"
        maxLength: 256
        x-nullable: true
      description:
        type: "string"
        description: "Cloud storage description"
        title: "Description"
        x-nullable: true
      created_at:
        type: "string"
        format: "date-time"
        description: "Creation time"
        title: "Created at"
        readOnly: true
      presign_ttl:
        type: "integer"
        description: "Presigned URLs TTL (in minutes)"
        title: "Presign_ttl"
      project:
        type: "integer"
        description: "A unique integer value identifying this project."
        title: "Project"
    example:
      container: "container"
      last_sync_count: 6
      last_sync: "2000-01-23T04:56:07.000+00:00"
      prefix: "prefix"
      presign: true
      account_key: "account_key"
      synchronizable: true
      description: "description"
      created_at: "2000-01-23T04:56:07.000+00:00"
      project: 5
      type: "azure"
      title: "title"
      last_sync_job: "last_sync_job"
      use_blob_urls: true
      meta: "{}"
      account_name: "account_name"
      regex_filter: "regex_filter"
      id: 0
      presign_ttl: 1
      traceback: "traceback"
      status: "initialized"
  AzureBlobExportStorage:
    type: "object"
    required:
    - "project"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      type:
        type: "string"
        title: "Type"
        readOnly: true
        default: "azure"
      synchronizable:
        type: "boolean"
        title: "Synchronizable"
        default: true
      container:
        type: "string"
        description: "Azure blob container"
        title: "Container"
        x-nullable: true
      prefix:
        type: "string"
        description: "Azure blob prefix name"
        title: "Prefix"
        x-nullable: true
      regex_filter:
        type: "string"
        description: "Cloud storage regex for filtering objects"
        title: "Regex_filter"
        x-nullable: true
      use_blob_urls:
        type: "boolean"
        description: "Interpret objects as BLOBs and generate URLs"
        title: "Use_blob_urls"
      account_name:
        type: "string"
        description: "Azure Blob account name"
        title: "Account_name"
        x-nullable: true
      account_key:
        type: "string"
        description: "Azure Blob account key"
        title: "Account_key"
        x-nullable: true
      last_sync:
        type: "string"
        format: "date-time"
        description: "Last sync finished time"
        title: "Last sync"
        x-nullable: true
      last_sync_count:
        type: "integer"
        description: "Count of tasks synced last time"
        title: "Last sync count"
        x-nullable: true
      last_sync_job:
        type: "string"
        description: "Last sync job ID"
        title: "Last_sync_job"
        maxLength: 256
        x-nullable: true
      status:
        type: "string"
        title: "Status"
        enum:
        - "initialized"
        - "queued"
        - "in_progress"
        - "failed"
        - "completed"
      traceback:
        type: "string"
        description: "Traceback report for the last failed sync"
        title: "Traceback"
        x-nullable: true
      meta:
        type: "object"
        description: "Meta and debug information about storage processes"
        title: "Meta"
        properties: {}
        x-nullable: true
      title:
        type: "string"
        description: "Cloud storage title"
        title: "Title"
        maxLength: 256
        x-nullable: true
      description:
        type: "string"
        description: "Cloud storage description"
        title: "Description"
        x-nullable: true
      created_at:
        type: "string"
        format: "date-time"
        description: "Creation time"
        title: "Created at"
        readOnly: true
      can_delete_objects:
        type: "boolean"
        description: "Deletion from storage enabled"
        title: "Can_delete_objects"
        x-nullable: true
      project:
        type: "integer"
        description: "A unique integer value identifying this project."
        title: "Project"
    example:
      container: "container"
      last_sync_count: 6
      can_delete_objects: true
      last_sync: "2000-01-23T04:56:07.000+00:00"
      prefix: "prefix"
      account_key: "account_key"
      synchronizable: true
      description: "description"
      created_at: "2000-01-23T04:56:07.000+00:00"
      project: 1
      type: "azure"
      title: "title"
      last_sync_job: "last_sync_job"
      use_blob_urls: true
      meta: "{}"
      account_name: "account_name"
      regex_filter: "regex_filter"
      id: 0
      traceback: "traceback"
      status: "initialized"
  GCSExportStorage:
    type: "object"
    required:
    - "project"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      type:
        type: "string"
        title: "Type"
        readOnly: true
        default: "gcs"
      synchronizable:
        type: "boolean"
        title: "Synchronizable"
        default: true
      bucket:
        type: "string"
        description: "GCS bucket name"
        title: "Bucket"
        x-nullable: true
      prefix:
        type: "string"
        description: "GCS bucket prefix"
        title: "Prefix"
        x-nullable: true
      regex_filter:
        type: "string"
        description: "Cloud storage regex for filtering objects"
        title: "Regex_filter"
        x-nullable: true
      use_blob_urls:
        type: "boolean"
        description: "Interpret objects as BLOBs and generate URLs"
        title: "Use_blob_urls"
      google_application_credentials:
        type: "string"
        description: "The content of GOOGLE_APPLICATION_CREDENTIALS json file"
        title: "Google_application_credentials"
        x-nullable: true
      google_project_id:
        type: "string"
        description: "Google project ID"
        title: "Google Project ID"
        x-nullable: true
      last_sync:
        type: "string"
        format: "date-time"
        description: "Last sync finished time"
        title: "Last sync"
        x-nullable: true
      last_sync_count:
        type: "integer"
        description: "Count of tasks synced last time"
        title: "Last sync count"
        x-nullable: true
      last_sync_job:
        type: "string"
        description: "Last sync job ID"
        title: "Last_sync_job"
        maxLength: 256
        x-nullable: true
      status:
        type: "string"
        title: "Status"
        enum:
        - "initialized"
        - "queued"
        - "in_progress"
        - "failed"
        - "completed"
      traceback:
        type: "string"
        description: "Traceback report for the last failed sync"
        title: "Traceback"
        x-nullable: true
      meta:
        type: "object"
        description: "Meta and debug information about storage processes"
        title: "Meta"
        properties: {}
        x-nullable: true
      title:
        type: "string"
        description: "Cloud storage title"
        title: "Title"
        maxLength: 256
        x-nullable: true
      description:
        type: "string"
        description: "Cloud storage description"
        title: "Description"
        x-nullable: true
      created_at:
        type: "string"
        format: "date-time"
        description: "Creation time"
        title: "Created at"
        readOnly: true
      can_delete_objects:
        type: "boolean"
        description: "Deletion from storage enabled"
        title: "Can_delete_objects"
        x-nullable: true
      project:
        type: "integer"
        description: "A unique integer value identifying this project."
        title: "Project"
    example:
      google_project_id: "google_project_id"
      last_sync_count: 6
      can_delete_objects: true
      last_sync: "2000-01-23T04:56:07.000+00:00"
      prefix: "prefix"
      synchronizable: true
      description: "description"
      created_at: "2000-01-23T04:56:07.000+00:00"
      project: 1
      type: "gcs"
      title: "title"
      google_application_credentials: "google_application_credentials"
      last_sync_job: "last_sync_job"
      bucket: "bucket"
      use_blob_urls: true
      meta: "{}"
      regex_filter: "regex_filter"
      id: 0
      traceback: "traceback"
      status: "initialized"
  LocalFilesExportStorage:
    type: "object"
    required:
    - "project"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      type:
        type: "string"
        title: "Type"
        readOnly: true
        default: "localfiles"
      synchronizable:
        type: "boolean"
        title: "Synchronizable"
        default: true
      path:
        type: "string"
        description: "Local path"
        title: "Path"
        x-nullable: true
      regex_filter:
        type: "string"
        description: "Regex for filtering objects"
        title: "Regex_filter"
        x-nullable: true
      use_blob_urls:
        type: "boolean"
        description: "Interpret objects as BLOBs and generate URLs"
        title: "Use_blob_urls"
      last_sync:
        type: "string"
        format: "date-time"
        description: "Last sync finished time"
        title: "Last sync"
        x-nullable: true
      last_sync_count:
        type: "integer"
        description: "Count of tasks synced last time"
        title: "Last sync count"
        x-nullable: true
      last_sync_job:
        type: "string"
        description: "Last sync job ID"
        title: "Last_sync_job"
        maxLength: 256
        x-nullable: true
      status:
        type: "string"
        title: "Status"
        enum:
        - "initialized"
        - "queued"
        - "in_progress"
        - "failed"
        - "completed"
      traceback:
        type: "string"
        description: "Traceback report for the last failed sync"
        title: "Traceback"
        x-nullable: true
      meta:
        type: "object"
        description: "Meta and debug information about storage processes"
        title: "Meta"
        properties: {}
        x-nullable: true
      title:
        type: "string"
        description: "Cloud storage title"
        title: "Title"
        maxLength: 256
        x-nullable: true
      description:
        type: "string"
        description: "Cloud storage description"
        title: "Description"
        x-nullable: true
      created_at:
        type: "string"
        format: "date-time"
        description: "Creation time"
        title: "Created at"
        readOnly: true
      can_delete_objects:
        type: "boolean"
        description: "Deletion from storage enabled"
        title: "Can_delete_objects"
        x-nullable: true
      project:
        type: "integer"
        description: "A unique integer value identifying this project."
        title: "Project"
    example:
      last_sync_count: 6
      can_delete_objects: true
      last_sync: "2000-01-23T04:56:07.000+00:00"
      synchronizable: true
      description: "description"
      created_at: "2000-01-23T04:56:07.000+00:00"
      project: 1
      type: "localfiles"
      title: "title"
      last_sync_job: "last_sync_job"
      path: "path"
      use_blob_urls: true
      meta: "{}"
      regex_filter: "regex_filter"
      id: 0
      traceback: "traceback"
      status: "initialized"
  RedisExportStorage:
    type: "object"
    required:
    - "project"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      type:
        type: "string"
        title: "Type"
        readOnly: true
        default: "redis"
      synchronizable:
        type: "boolean"
        title: "Synchronizable"
        default: true
      path:
        type: "string"
        description: "Storage prefix (optional)"
        title: "Path"
        x-nullable: true
      host:
        type: "string"
        description: "Server Host IP (optional)"
        title: "Host"
        x-nullable: true
      port:
        type: "string"
        description: "Server Port (optional)"
        title: "Port"
        x-nullable: true
      password:
        type: "string"
        description: "Server Password (optional)"
        title: "Password"
        x-nullable: true
      regex_filter:
        type: "string"
        description: "Cloud storage regex for filtering objects"
        title: "Port"
        x-nullable: true
      use_blob_urls:
        type: "boolean"
        description: "Interpret objects as BLOBs and generate URLs"
        title: "Use_blob_urls"
      last_sync:
        type: "string"
        format: "date-time"
        description: "Last sync finished time"
        title: "Last sync"
        x-nullable: true
      last_sync_count:
        type: "integer"
        description: "Count of tasks synced last time"
        title: "Last sync count"
        x-nullable: true
      last_sync_job:
        type: "string"
        description: "Last sync job ID"
        title: "Last_sync_job"
        maxLength: 256
        x-nullable: true
      status:
        type: "string"
        title: "Status"
        enum:
        - "initialized"
        - "queued"
        - "in_progress"
        - "failed"
        - "completed"
      traceback:
        type: "string"
        description: "Traceback report for the last failed sync"
        title: "Traceback"
        x-nullable: true
      meta:
        type: "object"
        description: "Meta and debug information about storage processes"
        title: "Meta"
        properties: {}
        x-nullable: true
      title:
        type: "string"
        description: "Cloud storage title"
        title: "Title"
        maxLength: 256
        x-nullable: true
      description:
        type: "string"
        description: "Cloud storage description"
        title: "Description"
        x-nullable: true
      created_at:
        type: "string"
        format: "date-time"
        description: "Creation time"
        title: "Created at"
        readOnly: true
      can_delete_objects:
        type: "boolean"
        description: "Deletion from storage enabled"
        title: "Can_delete_objects"
        x-nullable: true
      db:
        type: "integer"
        description: "Server Database"
        title: "Db"
      project:
        type: "integer"
        description: "A unique integer value identifying this project."
        title: "Project"
    example:
      last_sync_count: 6
      can_delete_objects: true
      last_sync: "2000-01-23T04:56:07.000+00:00"
      synchronizable: true
      description: "description"
      created_at: "2000-01-23T04:56:07.000+00:00"
      project: 5
      type: "redis"
      title: "title"
      last_sync_job: "last_sync_job"
      path: "path"
      password: "password"
      use_blob_urls: true
      port: "port"
      meta: "{}"
      host: "host"
      regex_filter: "regex_filter"
      id: 0
      traceback: "traceback"
      db: 1
      status: "initialized"
  S3ExportStorage:
    type: "object"
    required:
    - "project"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      type:
        type: "string"
        title: "Type"
        readOnly: true
        default: "s3"
      synchronizable:
        type: "boolean"
        title: "Synchronizable"
        default: true
      last_sync:
        type: "string"
        format: "date-time"
        description: "Last sync finished time"
        title: "Last sync"
        x-nullable: true
      last_sync_count:
        type: "integer"
        description: "Count of tasks synced last time"
        title: "Last sync count"
        x-nullable: true
      last_sync_job:
        type: "string"
        description: "Last sync job ID"
        title: "Last_sync_job"
        maxLength: 256
        x-nullable: true
      status:
        type: "string"
        title: "Status"
        enum:
        - "initialized"
        - "queued"
        - "in_progress"
        - "failed"
        - "completed"
      traceback:
        type: "string"
        description: "Traceback report for the last failed sync"
        title: "Traceback"
        x-nullable: true
      meta:
        type: "object"
        description: "Meta and debug information about storage processes"
        title: "Meta"
        properties: {}
        x-nullable: true
      title:
        type: "string"
        description: "Cloud storage title"
        title: "Title"
        maxLength: 256
        x-nullable: true
      description:
        type: "string"
        description: "Cloud storage description"
        title: "Description"
        x-nullable: true
      created_at:
        type: "string"
        format: "date-time"
        description: "Creation time"
        title: "Created at"
        readOnly: true
      can_delete_objects:
        type: "boolean"
        description: "Deletion from storage enabled"
        title: "Can_delete_objects"
        x-nullable: true
      bucket:
        type: "string"
        description: "S3 bucket name"
        title: "Bucket"
        x-nullable: true
      prefix:
        type: "string"
        description: "S3 bucket prefix"
        title: "Prefix"
        x-nullable: true
      regex_filter:
        type: "string"
        description: "Cloud storage regex for filtering objects"
        title: "Regex_filter"
        x-nullable: true
      use_blob_urls:
        type: "boolean"
        description: "Interpret objects as BLOBs and generate URLs"
        title: "Use_blob_urls"
      aws_access_key_id:
        type: "string"
        description: "AWS_ACCESS_KEY_ID"
        title: "Aws_access_key_id"
        x-nullable: true
      aws_secret_access_key:
        type: "string"
        description: "AWS_SECRET_ACCESS_KEY"
        title: "Aws_secret_access_key"
        x-nullable: true
      aws_session_token:
        type: "string"
        description: "AWS_SESSION_TOKEN"
        title: "Aws_session_token"
        x-nullable: true
      aws_sse_kms_key_id:
        type: "string"
        description: "AWS SSE KMS Key ID"
        title: "Aws_sse_kms_key_id"
        x-nullable: true
      region_name:
        type: "string"
        description: "AWS Region"
        title: "Region_name"
        x-nullable: true
      s3_endpoint:
        type: "string"
        description: "S3 Endpoint"
        title: "S3_endpoint"
        x-nullable: true
      project:
        type: "integer"
        description: "A unique integer value identifying this project."
        title: "Project"
    example:
      last_sync_count: 6
      can_delete_objects: true
      last_sync: "2000-01-23T04:56:07.000+00:00"
      aws_session_token: "aws_session_token"
      prefix: "prefix"
      aws_secret_access_key: "aws_secret_access_key"
      synchronizable: true
      description: "description"
      created_at: "2000-01-23T04:56:07.000+00:00"
      aws_sse_kms_key_id: "aws_sse_kms_key_id"
      project: 1
      type: "s3"
      title: "title"
      last_sync_job: "last_sync_job"
      bucket: "bucket"
      use_blob_urls: true
      aws_access_key_id: "aws_access_key_id"
      meta: "{}"
      regex_filter: "regex_filter"
      region_name: "region_name"
      id: 0
      traceback: "traceback"
      s3_endpoint: "s3_endpoint"
      status: "initialized"
  GCSImportStorage:
    type: "object"
    required:
    - "project"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      type:
        type: "string"
        title: "Type"
        readOnly: true
        default: "gcs"
      synchronizable:
        type: "boolean"
        title: "Synchronizable"
        default: true
      presign:
        type: "boolean"
        title: "Presign"
        default: true
      bucket:
        type: "string"
        description: "GCS bucket name"
        title: "Bucket"
        x-nullable: true
      prefix:
        type: "string"
        description: "GCS bucket prefix"
        title: "Prefix"
        x-nullable: true
      regex_filter:
        type: "string"
        description: "Cloud storage regex for filtering objects"
        title: "Regex_filter"
        x-nullable: true
      use_blob_urls:
        type: "boolean"
        description: "Interpret objects as BLOBs and generate URLs"
        title: "Use_blob_urls"
      google_application_credentials:
        type: "string"
        description: "The content of GOOGLE_APPLICATION_CREDENTIALS json file"
        title: "Google_application_credentials"
        x-nullable: true
      google_project_id:
        type: "string"
        description: "Google project ID"
        title: "Google Project ID"
        x-nullable: true
      last_sync:
        type: "string"
        format: "date-time"
        description: "Last sync finished time"
        title: "Last sync"
        x-nullable: true
      last_sync_count:
        type: "integer"
        description: "Count of tasks synced last time"
        title: "Last sync count"
        x-nullable: true
      last_sync_job:
        type: "string"
        description: "Last sync job ID"
        title: "Last_sync_job"
        maxLength: 256
        x-nullable: true
      status:
        type: "string"
        title: "Status"
        enum:
        - "initialized"
        - "queued"
        - "in_progress"
        - "failed"
        - "completed"
      traceback:
        type: "string"
        description: "Traceback report for the last failed sync"
        title: "Traceback"
        x-nullable: true
      meta:
        type: "object"
        description: "Meta and debug information about storage processes"
        title: "Meta"
        properties: {}
        x-nullable: true
      title:
        type: "string"
        description: "Cloud storage title"
        title: "Title"
        maxLength: 256
        x-nullable: true
      description:
        type: "string"
        description: "Cloud storage description"
        title: "Description"
        x-nullable: true
      created_at:
        type: "string"
        format: "date-time"
        description: "Creation time"
        title: "Created at"
        readOnly: true
      presign_ttl:
        type: "integer"
        description: "Presigned URLs TTL (in minutes)"
        title: "Presign_ttl"
      project:
        type: "integer"
        description: "A unique integer value identifying this project."
        title: "Project"
    example:
      google_project_id: "google_project_id"
      last_sync_count: 6
      last_sync: "2000-01-23T04:56:07.000+00:00"
      prefix: "prefix"
      presign: true
      synchronizable: true
      description: "description"
      created_at: "2000-01-23T04:56:07.000+00:00"
      project: 5
      type: "gcs"
      title: "title"
      google_application_credentials: "google_application_credentials"
      last_sync_job: "last_sync_job"
      bucket: "bucket"
      use_blob_urls: true
      meta: "{}"
      regex_filter: "regex_filter"
      id: 0
      presign_ttl: 1
      traceback: "traceback"
      status: "initialized"
  LocalFilesImportStorage:
    type: "object"
    required:
    - "project"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      type:
        type: "string"
        title: "Type"
        readOnly: true
        default: "localfiles"
      synchronizable:
        type: "boolean"
        title: "Synchronizable"
        default: true
      path:
        type: "string"
        description: "Local path"
        title: "Path"
        x-nullable: true
      regex_filter:
        type: "string"
        description: "Regex for filtering objects"
        title: "Regex_filter"
        x-nullable: true
      use_blob_urls:
        type: "boolean"
        description: "Interpret objects as BLOBs and generate URLs"
        title: "Use_blob_urls"
      last_sync:
        type: "string"
        format: "date-time"
        description: "Last sync finished time"
        title: "Last sync"
        x-nullable: true
      last_sync_count:
        type: "integer"
        description: "Count of tasks synced last time"
        title: "Last sync count"
        x-nullable: true
      last_sync_job:
        type: "string"
        description: "Last sync job ID"
        title: "Last_sync_job"
        maxLength: 256
        x-nullable: true
      status:
        type: "string"
        title: "Status"
        enum:
        - "initialized"
        - "queued"
        - "in_progress"
        - "failed"
        - "completed"
      traceback:
        type: "string"
        description: "Traceback report for the last failed sync"
        title: "Traceback"
        x-nullable: true
      meta:
        type: "object"
        description: "Meta and debug information about storage processes"
        title: "Meta"
        properties: {}
        x-nullable: true
      title:
        type: "string"
        description: "Cloud storage title"
        title: "Title"
        maxLength: 256
        x-nullable: true
      description:
        type: "string"
        description: "Cloud storage description"
        title: "Description"
        x-nullable: true
      created_at:
        type: "string"
        format: "date-time"
        description: "Creation time"
        title: "Created at"
        readOnly: true
      project:
        type: "integer"
        description: "A unique integer value identifying this project."
        title: "Project"
    example:
      last_sync_count: 6
      last_sync: "2000-01-23T04:56:07.000+00:00"
      synchronizable: true
      description: "description"
      created_at: "2000-01-23T04:56:07.000+00:00"
      project: 1
      type: "localfiles"
      title: "title"
      last_sync_job: "last_sync_job"
      path: "path"
      use_blob_urls: true
      meta: "{}"
      regex_filter: "regex_filter"
      id: 0
      traceback: "traceback"
      status: "initialized"
  RedisImportStorage:
    type: "object"
    required:
    - "project"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      type:
        type: "string"
        title: "Type"
        readOnly: true
        default: "redis"
      synchronizable:
        type: "boolean"
        title: "Synchronizable"
        default: true
      path:
        type: "string"
        description: "Storage prefix (optional)"
        title: "Path"
        x-nullable: true
      host:
        type: "string"
        description: "Server Host IP (optional)"
        title: "Host"
        x-nullable: true
      port:
        type: "string"
        description: "Server Port (optional)"
        title: "Port"
        x-nullable: true
      password:
        type: "string"
        description: "Server Password (optional)"
        title: "Password"
        x-nullable: true
      regex_filter:
        type: "string"
        description: "Cloud storage regex for filtering objects"
        title: "Port"
        x-nullable: true
      use_blob_urls:
        type: "boolean"
        description: "Interpret objects as BLOBs and generate URLs"
        title: "Use_blob_urls"
      last_sync:
        type: "string"
        format: "date-time"
        description: "Last sync finished time"
        title: "Last sync"
        x-nullable: true
      last_sync_count:
        type: "integer"
        description: "Count of tasks synced last time"
        title: "Last sync count"
        x-nullable: true
      last_sync_job:
        type: "string"
        description: "Last sync job ID"
        title: "Last_sync_job"
        maxLength: 256
        x-nullable: true
      status:
        type: "string"
        title: "Status"
        enum:
        - "initialized"
        - "queued"
        - "in_progress"
        - "failed"
        - "completed"
      traceback:
        type: "string"
        description: "Traceback report for the last failed sync"
        title: "Traceback"
        x-nullable: true
      meta:
        type: "object"
        description: "Meta and debug information about storage processes"
        title: "Meta"
        properties: {}
        x-nullable: true
      title:
        type: "string"
        description: "Cloud storage title"
        title: "Title"
        maxLength: 256
        x-nullable: true
      description:
        type: "string"
        description: "Cloud storage description"
        title: "Description"
        x-nullable: true
      created_at:
        type: "string"
        format: "date-time"
        description: "Creation time"
        title: "Created at"
        readOnly: true
      db:
        type: "integer"
        description: "Server Database"
        title: "Db"
      project:
        type: "integer"
        description: "A unique integer value identifying this project."
        title: "Project"
    example:
      last_sync_count: 6
      last_sync: "2000-01-23T04:56:07.000+00:00"
      synchronizable: true
      description: "description"
      created_at: "2000-01-23T04:56:07.000+00:00"
      project: 5
      type: "redis"
      title: "title"
      last_sync_job: "last_sync_job"
      path: "path"
      password: "password"
      use_blob_urls: true
      port: "port"
      meta: "{}"
      host: "host"
      regex_filter: "regex_filter"
      id: 0
      traceback: "traceback"
      db: 1
      status: "initialized"
  S3ImportStorage:
    type: "object"
    required:
    - "project"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      type:
        type: "string"
        title: "Type"
        readOnly: true
        default: "s3"
      synchronizable:
        type: "boolean"
        title: "Synchronizable"
        default: true
      presign:
        type: "boolean"
        title: "Presign"
        default: true
      last_sync:
        type: "string"
        format: "date-time"
        description: "Last sync finished time"
        title: "Last sync"
        x-nullable: true
      last_sync_count:
        type: "integer"
        description: "Count of tasks synced last time"
        title: "Last sync count"
        x-nullable: true
      last_sync_job:
        type: "string"
        description: "Last sync job ID"
        title: "Last_sync_job"
        maxLength: 256
        x-nullable: true
      status:
        type: "string"
        title: "Status"
        enum:
        - "initialized"
        - "queued"
        - "in_progress"
        - "failed"
        - "completed"
      traceback:
        type: "string"
        description: "Traceback report for the last failed sync"
        title: "Traceback"
        x-nullable: true
      meta:
        type: "object"
        description: "Meta and debug information about storage processes"
        title: "Meta"
        properties: {}
        x-nullable: true
      title:
        type: "string"
        description: "Cloud storage title"
        title: "Title"
        maxLength: 256
        x-nullable: true
      description:
        type: "string"
        description: "Cloud storage description"
        title: "Description"
        x-nullable: true
      created_at:
        type: "string"
        format: "date-time"
        description: "Creation time"
        title: "Created at"
        readOnly: true
      bucket:
        type: "string"
        description: "S3 bucket name"
        title: "Bucket"
        x-nullable: true
      prefix:
        type: "string"
        description: "S3 bucket prefix"
        title: "Prefix"
        x-nullable: true
      regex_filter:
        type: "string"
        description: "Cloud storage regex for filtering objects"
        title: "Regex_filter"
        x-nullable: true
      use_blob_urls:
        type: "boolean"
        description: "Interpret objects as BLOBs and generate URLs"
        title: "Use_blob_urls"
      aws_access_key_id:
        type: "string"
        description: "AWS_ACCESS_KEY_ID"
        title: "Aws_access_key_id"
        x-nullable: true
      aws_secret_access_key:
        type: "string"
        description: "AWS_SECRET_ACCESS_KEY"
        title: "Aws_secret_access_key"
        x-nullable: true
      aws_session_token:
        type: "string"
        description: "AWS_SESSION_TOKEN"
        title: "Aws_session_token"
        x-nullable: true
      aws_sse_kms_key_id:
        type: "string"
        description: "AWS SSE KMS Key ID"
        title: "Aws_sse_kms_key_id"
        x-nullable: true
      region_name:
        type: "string"
        description: "AWS Region"
        title: "Region_name"
        x-nullable: true
      s3_endpoint:
        type: "string"
        description: "S3 Endpoint"
        title: "S3_endpoint"
        x-nullable: true
      presign_ttl:
        type: "integer"
        description: "Presigned URLs TTL (in minutes)"
        title: "Presign_ttl"
      recursive_scan:
        type: "boolean"
        description: "Perform recursive scan over the bucket content"
        title: "Recursive scan"
      project:
        type: "integer"
        description: "A unique integer value identifying this project."
        title: "Project"
    example:
      last_sync_count: 6
      aws_session_token: "aws_session_token"
      prefix: "prefix"
      synchronizable: true
      description: "description"
      created_at: "2000-01-23T04:56:07.000+00:00"
      aws_sse_kms_key_id: "aws_sse_kms_key_id"
      project: 5
      type: "s3"
      title: "title"
      recursive_scan: true
      use_blob_urls: true
      regex_filter: "regex_filter"
      region_name: "region_name"
      id: 0
      presign_ttl: 1
      traceback: "traceback"
      s3_endpoint: "s3_endpoint"
      last_sync: "2000-01-23T04:56:07.000+00:00"
      aws_secret_access_key: "aws_secret_access_key"
      presign: true
      last_sync_job: "last_sync_job"
      bucket: "bucket"
      aws_access_key_id: "aws_access_key_id"
      meta: "{}"
      status: "initialized"
  BaseTask:
    type: "object"
    required:
    - "data"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      data:
        type: "object"
        description: "User imported or uploaded data for a task. Data is formatted\
          \ according to the project label config. You can find examples of data for\
          \ your project on the Import page in the Label Studio Data Manager UI."
        title: "Data"
        properties: {}
      meta:
        type: "object"
        description: "Meta is user imported (uploaded) data and can be useful as input\
          \ for an ML Backend for embeddings, advanced vectors, and other info. It\
          \ is passed to ML during training/predicting steps."
        title: "Meta"
        properties: {}
        x-nullable: true
      created_at:
        type: "string"
        format: "date-time"
        description: "Time a task was created"
        title: "Created at"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        description: "Last time a task was updated"
        title: "Updated at"
        readOnly: true
      is_labeled:
        type: "boolean"
        description: "True if the number of annotations for this task is greater than\
          \ or equal to the number of maximum_completions for the project"
        title: "Is_labeled"
      overlap:
        type: "integer"
        description: "Number of distinct annotators that processed the current task"
        title: "Overlap"
      inner_id:
        type: "integer"
        description: "Internal task ID in the project, starts with 1"
        title: "Inner id"
        x-nullable: true
      total_annotations:
        type: "integer"
        description: "Number of total annotations for the current task except cancelled\
          \ annotations"
        title: "Total_annotations"
      cancelled_annotations:
        type: "integer"
        description: "Number of total cancelled annotations for the current task"
        title: "Cancelled_annotations"
      total_predictions:
        type: "integer"
        description: "Number of total predictions for the current task"
        title: "Total_predictions"
      comment_count:
        type: "integer"
        description: "Number of comments in the task including all annotations"
        title: "Comment count"
      unresolved_comment_count:
        type: "integer"
        description: "Number of unresolved comments in the task including all annotations"
        title: "Unresolved comment count"
      last_comment_updated_at:
        type: "string"
        format: "date-time"
        description: "When the last comment was updated"
        title: "Last comment updated at"
        x-nullable: true
      project:
        type: "integer"
        description: "Project ID for this task"
        title: "Project"
        x-nullable: true
      updated_by:
        type: "integer"
        description: "Last annotator or reviewer who updated this task"
        title: "Updated by"
        x-nullable: true
      file_upload:
        type: "integer"
        description: "Uploaded file used as data source for this task"
        title: "File upload"
        x-nullable: true
      comment_authors:
        type: "array"
        description: "Users who wrote comments"
        uniqueItems: true
        items:
          type: "integer"
          description: "Users who wrote comments"
    example:
      comment_count: 7
      total_predictions: 2
      data: "{}"
      total_annotations: 5
      last_comment_updated_at: "2000-01-23T04:56:07.000+00:00"
      inner_id: 1
      created_at: "2000-01-23T04:56:07.000+00:00"
      project: 3
      comment_authors:
      - 7
      - 7
      file_upload: 4
      overlap: 6
      updated_at: "2000-01-23T04:56:07.000+00:00"
      meta: "{}"
      is_labeled: true
      cancelled_annotations: 5
      unresolved_comment_count: 9
      updated_by: 2
      id: 0
  data_manager_task_serializer:
    type: "object"
    required:
    - "data"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      predictions:
        type: "string"
        title: "Predictions"
        readOnly: true
      annotations:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/Annotation"
      drafts:
        type: "string"
        title: "Drafts"
        readOnly: true
      annotators:
        type: "string"
        title: "Annotators"
        readOnly: true
      inner_id:
        type: "integer"
        title: "Inner id"
      cancelled_annotations:
        type: "integer"
        title: "Cancelled annotations"
      total_annotations:
        type: "integer"
        title: "Total annotations"
      total_predictions:
        type: "integer"
        title: "Total predictions"
      completed_at:
        type: "string"
        format: "date-time"
        title: "Completed at"
      annotations_results:
        type: "string"
        title: "Annotations results"
        readOnly: true
      predictions_results:
        type: "string"
        title: "Predictions results"
        readOnly: true
      predictions_score:
        type: "number"
        title: "Predictions score"
      file_upload:
        type: "string"
        title: "File upload"
        readOnly: true
      storage_filename:
        type: "string"
        title: "Storage filename"
        readOnly: true
      annotations_ids:
        type: "string"
        title: "Annotations ids"
        readOnly: true
      predictions_model_versions:
        type: "string"
        title: "Predictions model versions"
        readOnly: true
      avg_lead_time:
        type: "number"
        title: "Avg lead time"
      draft_exists:
        type: "boolean"
        title: "Draft exists"
      updated_by:
        type: "string"
        title: "Updated by"
        readOnly: true
      data:
        type: "object"
        description: "User imported or uploaded data for a task. Data is formatted\
          \ according to the project label config. You can find examples of data for\
          \ your project on the Import page in the Label Studio Data Manager UI."
        title: "Data"
        properties: {}
      meta:
        type: "object"
        description: "Meta is user imported (uploaded) data and can be useful as input\
          \ for an ML Backend for embeddings, advanced vectors, and other info. It\
          \ is passed to ML during training/predicting steps."
        title: "Meta"
        properties: {}
        x-nullable: true
      created_at:
        type: "string"
        format: "date-time"
        description: "Time a task was created"
        title: "Created at"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        description: "Last time a task was updated"
        title: "Updated at"
        readOnly: true
      is_labeled:
        type: "boolean"
        description: "True if the number of annotations for this task is greater than\
          \ or equal to the number of maximum_completions for the project"
        title: "Is_labeled"
      overlap:
        type: "integer"
        description: "Number of distinct annotators that processed the current task"
        title: "Overlap"
      comment_count:
        type: "integer"
        description: "Number of comments in the task including all annotations"
        title: "Comment count"
      unresolved_comment_count:
        type: "integer"
        description: "Number of unresolved comments in the task including all annotations"
        title: "Unresolved comment count"
      last_comment_updated_at:
        type: "string"
        format: "date-time"
        description: "When the last comment was updated"
        title: "Last comment updated at"
        x-nullable: true
      project:
        type: "integer"
        description: "Project ID for this task"
        title: "Project"
        x-nullable: true
      comment_authors:
        type: "array"
        description: "Users who wrote comments"
        uniqueItems: true
        items:
          type: "integer"
          description: "Users who wrote comments"
    example:
      comment_count: 3
      total_predictions: 5
      data: "{}"
      annotators: "annotators"
      annotations_results: "annotations_results"
      draft_exists: true
      annotations:
      - last_created_by: 2
        parent_annotation: 3
        created_ago: "created_ago"
        unique_id: "unique_id"
        was_cancelled: true
        draft_created_at: "2000-01-23T04:56:07.000+00:00"
        ground_truth: true
        import_id: 5
        created_at: "2000-01-23T04:56:07.000+00:00"
        project: 2
        parent_prediction: 9
        last_action: "prediction"
        result: "{}"
        created_username: "created_username"
        task: 5
        updated_at: "2000-01-23T04:56:07.000+00:00"
        lead_time: 1.46581298050294517310021547018550336360931396484375
        updated_by: 7
        id: 0
        completed_by: 6
      - last_created_by: 2
        parent_annotation: 3
        created_ago: "created_ago"
        unique_id: "unique_id"
        was_cancelled: true
        draft_created_at: "2000-01-23T04:56:07.000+00:00"
        ground_truth: true
        import_id: 5
        created_at: "2000-01-23T04:56:07.000+00:00"
        project: 2
        parent_prediction: 9
        last_action: "prediction"
        result: "{}"
        created_username: "created_username"
        task: 5
        updated_at: "2000-01-23T04:56:07.000+00:00"
        lead_time: 1.46581298050294517310021547018550336360931396484375
        updated_by: 7
        id: 0
        completed_by: 6
      created_at: "2000-01-23T04:56:07.000+00:00"
      project: 4
      predictions_results: "predictions_results"
      file_upload: "file_upload"
      updated_at: "2000-01-23T04:56:07.000+00:00"
      is_labeled: true
      storage_filename: "storage_filename"
      unresolved_comment_count: 2
      id: 0
      total_annotations: 5
      last_comment_updated_at: "2000-01-23T04:56:07.000+00:00"
      inner_id: 6
      predictions_model_versions: "predictions_model_versions"
      drafts: "drafts"
      comment_authors:
      - 7
      - 7
      predictions: "predictions"
      completed_at: "2000-01-23T04:56:07.000+00:00"
      predictions_score: 2.3021358869347654518833223846741020679473876953125
      overlap: 9
      meta: "{}"
      cancelled_annotations: 1
      avg_lead_time: 7.061401241503109105224211816675961017608642578125
      updated_by: "updated_by"
      annotations_ids: "annotations_ids"
  TaskSimple:
    type: "object"
    required:
    - "data"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      data:
        type: "object"
        description: "User imported or uploaded data for a task. Data is formatted\
          \ according to the project label config. You can find examples of data for\
          \ your project on the Import page in the Label Studio Data Manager UI."
        title: "Data"
        properties: {}
      meta:
        type: "object"
        description: "Meta is user imported (uploaded) data and can be useful as input\
          \ for an ML Backend for embeddings, advanced vectors, and other info. It\
          \ is passed to ML during training/predicting steps."
        title: "Meta"
        properties: {}
        x-nullable: true
      created_at:
        type: "string"
        format: "date-time"
        description: "Time a task was created"
        title: "Created at"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        description: "Last time a task was updated"
        title: "Updated at"
        readOnly: true
      is_labeled:
        type: "boolean"
        description: "True if the number of annotations for this task is greater than\
          \ or equal to the number of maximum_completions for the project"
        title: "Is_labeled"
      overlap:
        type: "integer"
        description: "Number of distinct annotators that processed the current task"
        title: "Overlap"
      inner_id:
        type: "integer"
        description: "Internal task ID in the project, starts with 1"
        title: "Inner id"
        x-nullable: true
      total_annotations:
        type: "integer"
        description: "Number of total annotations for the current task except cancelled\
          \ annotations"
        title: "Total_annotations"
      cancelled_annotations:
        type: "integer"
        description: "Number of total cancelled annotations for the current task"
        title: "Cancelled_annotations"
      total_predictions:
        type: "integer"
        description: "Number of total predictions for the current task"
        title: "Total_predictions"
      comment_count:
        type: "integer"
        description: "Number of comments in the task including all annotations"
        title: "Comment count"
      unresolved_comment_count:
        type: "integer"
        description: "Number of unresolved comments in the task including all annotations"
        title: "Unresolved comment count"
      last_comment_updated_at:
        type: "string"
        format: "date-time"
        description: "When the last comment was updated"
        title: "Last comment updated at"
        x-nullable: true
      project:
        type: "integer"
        description: "Project ID for this task"
        title: "Project"
        x-nullable: true
      updated_by:
        type: "integer"
        description: "Last annotator or reviewer who updated this task"
        title: "Updated by"
        x-nullable: true
      file_upload:
        type: "integer"
        description: "Uploaded file used as data source for this task"
        title: "File upload"
        x-nullable: true
      comment_authors:
        type: "array"
        description: "Users who wrote comments"
        uniqueItems: true
        items:
          type: "integer"
          description: "Users who wrote comments"
      annotations:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/Annotation"
      predictions:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/Prediction"
    example:
      comment_count: 7
      total_predictions: 2
      data: "{}"
      total_annotations: 5
      last_comment_updated_at: "2000-01-23T04:56:07.000+00:00"
      inner_id: 1
      created_at: "2000-01-23T04:56:07.000+00:00"
      project: 3
      annotations:
      - last_created_by: 2
        parent_annotation: 3
        created_ago: "created_ago"
        unique_id: "unique_id"
        was_cancelled: true
        draft_created_at: "2000-01-23T04:56:07.000+00:00"
        ground_truth: true
        import_id: 5
        created_at: "2000-01-23T04:56:07.000+00:00"
        project: 2
        parent_prediction: 9
        last_action: "prediction"
        result: "{}"
        created_username: "created_username"
        task: 5
        updated_at: "2000-01-23T04:56:07.000+00:00"
        lead_time: 1.46581298050294517310021547018550336360931396484375
        updated_by: 7
        id: 0
        completed_by: 6
      - last_created_by: 2
        parent_annotation: 3
        created_ago: "created_ago"
        unique_id: "unique_id"
        was_cancelled: true
        draft_created_at: "2000-01-23T04:56:07.000+00:00"
        ground_truth: true
        import_id: 5
        created_at: "2000-01-23T04:56:07.000+00:00"
        project: 2
        parent_prediction: 9
        last_action: "prediction"
        result: "{}"
        created_username: "created_username"
        task: 5
        updated_at: "2000-01-23T04:56:07.000+00:00"
        lead_time: 1.46581298050294517310021547018550336360931396484375
        updated_by: 7
        id: 0
        completed_by: 6
      comment_authors:
      - 7
      - 7
      file_upload: 4
      predictions:
      - result: "{}"
        mislabeling: 5.962133916683182377482808078639209270477294921875
        model_version: "model_version"
        score: 6.02745618307040320615897144307382404804229736328125
        cluster: 1
        created_ago: "created_ago"
        task: 5
        updated_at: "2000-01-23T04:56:07.000+00:00"
        neighbors: "{}"
        created_at: "2000-01-23T04:56:07.000+00:00"
        project: 2
        id: 0
      - result: "{}"
        mislabeling: 5.962133916683182377482808078639209270477294921875
        model_version: "model_version"
        score: 6.02745618307040320615897144307382404804229736328125
        cluster: 1
        created_ago: "created_ago"
        task: 5
        updated_at: "2000-01-23T04:56:07.000+00:00"
        neighbors: "{}"
        created_at: "2000-01-23T04:56:07.000+00:00"
        project: 2
        id: 0
      overlap: 6
      updated_at: "2000-01-23T04:56:07.000+00:00"
      meta: "{}"
      is_labeled: true
      cancelled_annotations: 5
      unresolved_comment_count: 9
      updated_by: 2
      id: 0
  Webhook:
    type: "object"
    required:
    - "url"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      organization:
        type: "integer"
        title: "Organization"
        readOnly: true
      project:
        type: "integer"
        title: "Project"
        x-nullable: true
      url:
        type: "string"
        format: "uri"
        description: "URL of webhook"
        title: "URL of webhook"
        minLength: 1
        maxLength: 2048
      send_payload:
        type: "boolean"
        description: "If value is False send only action"
        title: "Does webhook send the payload"
      send_for_all_actions:
        type: "boolean"
        description: "If value is False - used only for actions from WebhookAction"
        title: "Use webhook for all actions"
      headers:
        type: "object"
        description: "Key Value Json of headers"
        title: "Request extra headers of webhook"
        properties: {}
      is_active:
        type: "boolean"
        description: "If value is False the webhook is disabled"
        title: "Is webhook active"
      actions:
        type: "array"
        items:
          type: "string"
          enum:
          - "PROJECT_CREATED"
          - "PROJECT_UPDATED"
          - "PROJECT_DELETED"
          - "TASKS_CREATED"
          - "TASKS_DELETED"
          - "ANNOTATION_CREATED"
          - "ANNOTATIONS_CREATED"
          - "ANNOTATION_UPDATED"
          - "ANNOTATIONS_DELETED"
          - "LABEL_LINK_CREATED"
          - "LABEL_LINK_UPDATED"
          - "LABEL_LINK_DELETED"
      created_at:
        type: "string"
        format: "date-time"
        description: "Creation time"
        title: "Created at"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        description: "Last update time"
        title: "Updated at"
        readOnly: true
    example:
      headers: "{}"
      is_active: true
      updated_at: "2000-01-23T04:56:07.000+00:00"
      organization: 6
      send_for_all_actions: true
      project: 1
      created_at: "2000-01-23T04:56:07.000+00:00"
      send_payload: true
      id: 0
      actions:
      - "PROJECT_CREATED"
      - "PROJECT_CREATED"
      url: "http://example.com/aeiou"
  WebhookSerializerForUpdate:
    type: "object"
    required:
    - "url"
    properties:
      id:
        type: "integer"
        title: "ID"
        readOnly: true
      organization:
        type: "integer"
        title: "Organization"
        readOnly: true
      project:
        type: "integer"
        title: "Project"
        readOnly: true
        x-nullable: true
      url:
        type: "string"
        format: "uri"
        description: "URL of webhook"
        title: "URL of webhook"
        minLength: 1
        maxLength: 2048
      send_payload:
        type: "boolean"
        description: "If value is False send only action"
        title: "Does webhook send the payload"
      send_for_all_actions:
        type: "boolean"
        description: "If value is False - used only for actions from WebhookAction"
        title: "Use webhook for all actions"
      headers:
        type: "object"
        description: "Key Value Json of headers"
        title: "Request extra headers of webhook"
        properties: {}
      is_active:
        type: "boolean"
        description: "If value is False the webhook is disabled"
        title: "Is webhook active"
      actions:
        type: "array"
        items:
          type: "string"
          enum:
          - "PROJECT_CREATED"
          - "PROJECT_UPDATED"
          - "PROJECT_DELETED"
          - "TASKS_CREATED"
          - "TASKS_DELETED"
          - "ANNOTATION_CREATED"
          - "ANNOTATIONS_CREATED"
          - "ANNOTATION_UPDATED"
          - "ANNOTATIONS_DELETED"
          - "LABEL_LINK_CREATED"
          - "LABEL_LINK_UPDATED"
          - "LABEL_LINK_DELETED"
      created_at:
        type: "string"
        format: "date-time"
        description: "Creation time"
        title: "Created at"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        description: "Last update time"
        title: "Updated at"
        readOnly: true
    example:
      headers: "{}"
      is_active: true
      updated_at: "2000-01-23T04:56:07.000+00:00"
      organization: 6
      send_for_all_actions: true
      project: 1
      created_at: "2000-01-23T04:56:07.000+00:00"
      send_payload: true
      id: 0
      actions:
      - "PROJECT_CREATED"
      - "PROJECT_CREATED"
      url: "http://example.com/aeiou"
  inline_response_201:
    type: "object"
    properties:
      token:
        type: "string"
        description: "Token"
    description: "User token"
    example:
      token: "token"
  inline_response_200:
    type: "object"
    required:
    - "count"
    - "results"
    properties:
      count:
        type: "integer"
      next:
        type: "string"
        format: "uri"
        x-nullable: true
      previous:
        type: "string"
        format: "uri"
        x-nullable: true
      results:
        type: "array"
        items:
          $ref: "#/definitions/LabelLink"
    example:
      next: "http://example.com/aeiou"
      previous: "http://example.com/aeiou"
      count: 0
      results:
      - project: 5
        id: 6
        label: 5
        from_name: "from_name"
        annotations_count: 1
      - project: 5
        id: 6
        label: 5
        from_name: "from_name"
        annotations_count: 1
  inline_response_200_1:
    type: "object"
    required:
    - "count"
    - "results"
    properties:
      count:
        type: "integer"
      next:
        type: "string"
        format: "uri"
        x-nullable: true
      previous:
        type: "string"
        format: "uri"
        x-nullable: true
      results:
        type: "array"
        items:
          $ref: "#/definitions/Label"
    example:
      next: "http://example.com/aeiou"
      previous: "http://example.com/aeiou"
      count: 0
      results:
      - approved: true
        approved_by: 5
        projects:
        - 7
        - 7
        updated_at: "2000-01-23T04:56:07.000+00:00"
        organization: 2
        created_at: "2000-01-23T04:56:07.000+00:00"
        description: "description"
        links:
        - 1
        - 1
        id: 6
        title: "title"
        value: "{}"
        created_by: 5
      - approved: true
        approved_by: 5
        projects:
        - 7
        - 7
        updated_at: "2000-01-23T04:56:07.000+00:00"
        organization: 2
        created_at: "2000-01-23T04:56:07.000+00:00"
        description: "description"
        links:
        - 1
        - 1
        id: 6
        title: "title"
        value: "{}"
        created_by: 5
  data:
    type: "object"
    properties:
      project:
        type: "integer"
        description: "Project ID"
      url:
        type: "string"
        description: "ML backend URL"
    example:
      project: 0
      url: "url"
  data_1:
    type: "object"
    properties:
      use_ground_truth:
        type: "boolean"
        description: "Whether to include ground truth annotations in training"
  inline_response_200_2:
    type: "object"
    required:
    - "count"
    - "results"
    properties:
      count:
        type: "integer"
      next:
        type: "string"
        format: "uri"
        x-nullable: true
      previous:
        type: "string"
        format: "uri"
        x-nullable: true
      results:
        type: "array"
        items:
          $ref: "#/definitions/OrganizationMemberUser"
    example:
      next: "http://example.com/aeiou"
      previous: "http://example.com/aeiou"
      count: 0
      results:
      - organization: 1
        id: 6
        user:
          active_organization: 5
          initials: "initials"
          contributed_to_projects: "contributed_to_projects"
          last_name: "last_name"
          avatar: "avatar"
          last_activity: "2000-01-23T04:56:07.000+00:00"
          phone: "phone"
          allow_newsletters: true
          id: 5
          first_name: "first_name"
          created_projects: "created_projects"
          email: "email"
          username: "username"
      - organization: 1
        id: 6
        user:
          active_organization: 5
          initials: "initials"
          contributed_to_projects: "contributed_to_projects"
          last_name: "last_name"
          avatar: "avatar"
          last_activity: "2000-01-23T04:56:07.000+00:00"
          phone: "phone"
          allow_newsletters: true
          id: 5
          first_name: "first_name"
          created_projects: "created_projects"
          email: "email"
          username: "username"
  inline_response_200_3:
    type: "object"
    required:
    - "count"
    - "results"
    properties:
      count:
        type: "integer"
      next:
        type: "string"
        format: "uri"
        x-nullable: true
      previous:
        type: "string"
        format: "uri"
        x-nullable: true
      results:
        type: "array"
        items:
          $ref: "#/definitions/Project"
    example:
      next: "http://example.com/aeiou"
      previous: "http://example.com/aeiou"
      count: 0
      results:
      - model_version: "model_version"
        show_collab_predictions: true
        color: "color"
        is_published: true
        label_config: "label_config"
        description: "description"
        created_at: "2000-01-23T04:56:07.000+00:00"
        title: "title"
        show_skip_button: true
        is_draft: true
        evaluate_predictions_automatically: true
        pinned_at: "2000-01-23T04:56:07.000+00:00"
        min_annotations_to_start_training: 2
        ground_truth_number: 2
        show_ground_truth_first: true
        task_number: 9
        reveal_preannotations_interactively: true
        id: 6
        skipped_annotations_number: 4
        task_data_login: "task_data_login"
        control_weights: "{}"
        expert_instruction: "expert_instruction"
        finished_task_number: 1
        start_training_on_annotation_update: "start_training_on_annotation_update"
        total_predictions_number: 1
        queue_total: "queue_total"
        num_tasks_with_annotations: 7
        total_annotations_number: 7
        sampling: "Sequential sampling"
        skip_queue: "REQUEUE_FOR_ME"
        show_instruction: true
        created_by:
          last_name: "last_name"
          id: 5
          avatar: "avatar"
          first_name: "first_name"
          email: "email"
        parsed_label_config: "parsed_label_config"
        show_annotation_history: true
        enable_empty_annotation: true
        queue_done: "queue_done"
        task_data_password: "task_data_password"
        maximum_annotations: 5
        organization: 1
        show_overlap_first: true
        config_has_control_tags: "config_has_control_tags"
        overlap_cohort_percentage: 1
        useful_annotation_number: 3
      - model_version: "model_version"
        show_collab_predictions: true
        color: "color"
        is_published: true
        label_config: "label_config"
        description: "description"
        created_at: "2000-01-23T04:56:07.000+00:00"
        title: "title"
        show_skip_button: true
        is_draft: true
        evaluate_predictions_automatically: true
        pinned_at: "2000-01-23T04:56:07.000+00:00"
        min_annotations_to_start_training: 2
        ground_truth_number: 2
        show_ground_truth_first: true
        task_number: 9
        reveal_preannotations_interactively: true
        id: 6
        skipped_annotations_number: 4
        task_data_login: "task_data_login"
        control_weights: "{}"
        expert_instruction: "expert_instruction"
        finished_task_number: 1
        start_training_on_annotation_update: "start_training_on_annotation_update"
        total_predictions_number: 1
        queue_total: "queue_total"
        num_tasks_with_annotations: 7
        total_annotations_number: 7
        sampling: "Sequential sampling"
        skip_queue: "REQUEUE_FOR_ME"
        show_instruction: true
        created_by:
          last_name: "last_name"
          id: 5
          avatar: "avatar"
          first_name: "first_name"
          email: "email"
        parsed_label_config: "parsed_label_config"
        show_annotation_history: true
        enable_empty_annotation: true
        queue_done: "queue_done"
        task_data_password: "task_data_password"
        maximum_annotations: 5
        organization: 1
        show_overlap_first: true
        config_has_control_tags: "config_has_control_tags"
        overlap_cohort_percentage: 1
        useful_annotation_number: 3
  Task creation response:
    type: "object"
    properties:
      task_count:
        type: "integer"
        description: "Number of tasks added"
        title: "task_count"
      annotation_count:
        type: "integer"
        description: "Number of annotations added"
        title: "annotation_count"
      predictions_count:
        type: "integer"
        description: "Number of predictions added"
        title: "predictions_count"
      duration:
        type: "number"
        description: "Time in seconds to create"
        title: "duration"
      file_upload_ids:
        type: "array"
        description: "Database IDs of uploaded files"
        title: "file_upload_ids"
        items:
          type: "integer"
          title: "File Upload IDs"
      could_be_tasks_list:
        type: "boolean"
        description: "Whether uploaded files can contain lists of tasks, like CSV/TSV\
          \ files"
        title: "could_be_tasks_list"
      found_formats:
        type: "array"
        description: "The list of found file formats"
        title: "found_formats"
        items:
          type: "string"
          title: "File format"
      data_columns:
        type: "array"
        description: "The list of found data columns"
        title: "data_columns"
        items:
          type: "string"
          title: "Data column name"
    description: "Task creation response"
    example:
      duration: 5.962133916683182377482808078639209270477294921875
      annotation_count: 6
      data_columns:
      - "data_columns"
      - "data_columns"
      found_formats:
      - "found_formats"
      - "found_formats"
      file_upload_ids:
      - 5
      - 5
      predictions_count: 1
      could_be_tasks_list: true
      task_count: 0
